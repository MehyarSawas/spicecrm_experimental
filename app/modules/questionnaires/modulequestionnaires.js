/*
SpiceUI 2018.10.001

Copyright (c) 2016-present, aac services.k.s - All rights reserved.
Redistribution and use in source and binary forms, without modification, are permitted provided that the following conditions are met:
- Redistributions of source code must retain this copyright and license notice, this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
- If used the SpiceCRM Logo needs to be displayed in the upper left corner of the screen in a minimum dimension of 31x31 pixels and be clearly visible, the icon needs to provide a link to http://www.spicecrm.io
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

/** 
 * Â© 2015 - 2021 aac services k.s. All rights reserved.
 * release: 2021.01.001
 * date: 2021-03-18 21:30:15
 * build: 2021.01.001.1616099416007
 **/
"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])})(e,t)};return function(e,t){function s(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),__decorate=this&&this.__decorate||function(e,t,s,i){var n,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,s,i);else for(var r=e.length-1;0<=r;r--)(n=e[r])&&(a=(o<3?n(a):3<o?n(t,s,a):n(t,s))||a);return 3<o&&a&&Object.defineProperty(t,s,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.QuestionRenderNPS=exports.QuestionRenderText=exports.QuestionRenderRating=exports.QuestionRenderIST=exports.QuestionTypeISTOptionsPipe=exports.QuestionTypeISTTextPipe=exports.QuestionRenderBasic=exports.QuestionnaireFillOutModal=exports.QuestionnaireFillOutButton=exports.QuestionnaireEntireEvaluation=exports.QuestionnaireSingleEvaluationValues=exports.QuestionnaireResults=exports.QuestionsetManager=exports.QuestionnaireEditorQuestionsetAdd=exports.QuestionnaireEditor=exports.QuestionnaireInterpretationAssignment=exports.QuestionnaireInterpretationCategories=exports.QuestionnaireEvaluationSpiderweb=exports.QuestionnaireEvaluationBar=exports.QuestionnaireEvaluationDefault=exports.QuestionnaireEvaluation=exports.QuestionsManagerEditCategories=exports.QuestionnaireCategoryPool=exports.QuestionsetRenderRating=exports.QuestionsetRenderBasic=exports.QuestionsetRender=exports.QuestionsetPreview=exports.QuestionsetPreviewButton=exports.QuestionnaireRender=exports.QuestionnairePreview=exports.QuestionnairePreviewButton=exports.QuestionsManagerAddModal=exports.QuestionsManagerEditOptionSingleMulti=exports.QuestionsManagerEditOptionIst=exports.QuestionsManagerEditIst=exports.QuestionsManagerEditText=exports.QuestionsManagerEditSingle=exports.QuestionsManagerEditBinaryOption=exports.QuestionsManagerEditBinary=exports.QuestionsManagerEditNPS=exports.QuestionsManagerEditRating=exports.QuestionsManagerEditMulti=exports.QuestionsManagerEditBasicWithOptions=exports.QuestionsManagerEditBasic=exports.QuestionsetTypeParametersText=exports.QuestionsetTypeParametersNPS=exports.QuestionsetTypeParametersRating=exports.QuestionsetTypeParameters=exports.QuestionsManager=exports.questionnaireParticipationService=void 0,exports.ModuleQuestionnaires=exports.fieldQuestionnaire=exports.QuestionsManagerEditRatingGroup=exports.QuestionRenderBinarySingleMulti=void 0;var common_1=require("@angular/common"),core_1=require("@angular/core"),forms_1=require("@angular/forms"),objectfields_1=require("../../objectfields/objectfields"),globalcomponents_1=require("../../globalcomponents/globalcomponents"),objectcomponents_1=require("../../objectcomponents/objectcomponents"),systemcomponents_1=require("../../systemcomponents/systemcomponents"),modulemediafiles_1=require("../../modules/mediafiles/modulemediafiles"),directives_1=require("../../directives/directives"),drag_drop_1=require("@angular/cdk/drag-drop"),services_1=require("../../services/services"),rxjs_1=require("rxjs"),router_1=require("@angular/router"),platform_browser_1=require("@angular/platform-browser"),questionnaireParticipationService=function(){function e(e,t,s,i,n){this.backend=e,this.toast=t,this.language=s,this.helper=i,this.broadcast=n,this.questionsetsArray=[],this.questionoptions={},this.imageWidthQuestion=200,this.inModal=!0,this.timerText=null,this.timerWarning=!1,this.hideFinishedQuestions=!1,this.editMode="questionnaire",this.percentOfFinishedQuestionsInQuestionset={},this.numOfFinishedQuestionsInQuestionset={},this.allQuestionsOfQuestionsetFinished={},this.questionsMeta={},this.questions={},this.answers={},this.answersBackup={},this.isCompleted=!1,this.initByParent=!1,this.initByParticipation=!1,this.initByQuestionnaire=!1,this._isDirty=!1,this.isDirty$=new rxjs_1.BehaviorSubject(!1),this._isLoadedQuestionnaire=!1,this._isLoadedParticipation=!1,this.isLoaded$=new rxjs_1.BehaviorSubject(!1),this._isSaving=!1,this.isSaving$=new rxjs_1.BehaviorSubject(!1),this.answersChanged$=new core_1.EventEmitter}return Object.defineProperty(e.prototype,"isDirty",{get:function(){return this._isDirty},set:function(e){this._isDirty=e,this.isDirty$.next(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isLoadedQuestionnaire",{get:function(){return this._isLoadedQuestionnaire},set:function(e){this._isLoadedQuestionnaire=e,this.isLoaded$.next(this.isLoaded)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isLoadedParticipation",{get:function(){return this._isLoadedParticipation},set:function(e){this._isLoadedParticipation=e,this.isLoaded$.next(this.isLoaded)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isLoaded",{get:function(){return this._isLoadedQuestionnaire&&this._isLoadedParticipation},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isSaving",{get:function(){return this._isSaving},set:function(e){this._isSaving=e,this.isSaving$.next(e)},enumerable:!1,configurable:!0}),e.prototype.init_byParent=function(e,t){this.initByParent=!0,this.parentId=e,this.parentType=t,this.loadParticipation_byParent()},e.prototype.init_byParticipation=function(e){this.initByParticipation=!0,this.participationId=e,this.loadParticipation_byParticipation()},e.prototype.init_byQuestionnaire=function(e){this.initByQuestionnaire=!0,this.questionnaireId=e,this.editMode||(this.editMode="preview"),this.loadQuestionnaire()},e.prototype.setAnswerValue=function(e,t){return"off"!==this.editMode&&(!this.questionsMeta[e].tempReadonly&&("questionoption"===this.editMode&&(s=JSON.stringify(this.answers[e])),this.answers[e].optionlessAnswerValue=t,void("questionoption"===this.editMode?this.saveSingleAnswerToBackend(e,s):this.isDirty=!0)));var s},e.prototype.setOptionWithValue=function(e,t){var s,i=this.questionoptions[e].parentQuestion;return"off"!==this.editMode&&(!this.questionsMeta[i.id].tempReadonly&&("questionoption"===this.editMode&&(s=JSON.stringify(this.answers[i.id])),this.answers[i.id].options[e]=t||!1,void("questionoption"===this.editMode?this.saveSingleAnswerToBackend(i.id,s):this.isDirty=!0)))},e.prototype.saveSingleAnswerToBackend=function(e,t){this.questionsMeta[e].tempReadonly=!0},e.prototype.numOptionsSelected=function(e){var t=0;if(this.answers[e].options)for(var s=0,i=Object.keys(this.answers[e].options);s<i.length;s++){var n=i[s];!0===this.answers[e].options[n]&&t++}return t},e.prototype.clickAnswerOption=function(s,e){var i=this;e.stopPropagation();var t,n=this.questionoptions[s].parentQuestion;if("off"===this.editMode)return!1;if(this.questionsMeta[n.id].tempReadonly)return!1;if("questionoption"===this.editMode&&(t=JSON.stringify(this.answers[n.id])),!0!==this.answers[n.id].options[s]&&this.questionsMeta[n.id].parameter.maxAnswers&&""!==this.questionsMeta[n.id].parameter.maxAnswers&&this.numOptionsSelected(n.id)>=this.questionsMeta[n.id].parameter.maxAnswers)return!1;e=n.questiontype;return"multi"===e?this.answers[n.id].options[s]=!this.answers[n.id].options[s]:"single"!==e&&"rating"!==e&&"ist"!==e&&"binary"!==e&&"ratinggroup"!==e||Object.entries(this.answers[n.id].options).forEach(function(e){var t=e[0];e[1];t===s?i.answers[n.id].options[s]=!i.answers[n.id].options[s]:i.answers[n.id].options[t]=!1}),"questionoption"===this.editMode?this.saveSingleAnswerToBackend(n.id,t):this.isDirty=!0,this.answersChanged$.emit(),!0},e.prototype.setTimer=function(e,t){},e.prototype.loadQuestionnaire=function(){var n=this;this.isLoadedParticipation=!0;var o=new core_1.EventEmitter;return this.backend.getRequest("questionnaire/render/"+this.questionnaireId).subscribe(function(e){n.questionnaire=e,n.doBasics(),n.buildArrays(),n.sortData(),n.buildQuestionMetaData(),n.initAnswers();for(var t=0,s=n.questionsetsArray;t<s.length;t++){var i=s[t];n.determineNumOfFinishedQuestionsInQuestionset(i.id)}n.isLoadedQuestionnaire=!0,o.emit()}),o},e.prototype.doBasics=function(){if(this.questionnaire.questionsets)for(var e in this.questionnaire.questionsets)if(this.questionnaire.questionsets[e].questions)for(var t in this.questionnaire.questionsets[e].questions)if(this.questions[t]=this.questionnaire.questionsets[e].questions[t],this.questionnaire.questionsets[e].questions[t].parentQuestionset=this.questionnaire.questionsets[e],this.questionnaire.questionsets[e].questions[t].questionoptions)for(var s in this.questionnaire.questionsets[e].questions[t].questionoptions)this.questionnaire.questionsets[e].questions[t].questionoptions[s].parentQuestion=this.questionnaire.questionsets[e].questions[t],this.questionoptions[s]=this.questionnaire.questionsets[e].questions[t].questionoptions[s]},e.prototype.buildArrays=function(){if(this.questionsetsArray=[],this.questionsArray={},this.questionoptionsArray={},this.questionnaire.questionsets)for(var e in this.questionnaire.questionsets)if(this.questionsetsArray.push(this.questionnaire.questionsets[e]),this.questionsArray[e]=[],this.questionnaire.questionsets[e].questions)for(var t in this.questionnaire.questionsets[e].questions)if(this.questionsArray[e].push(this.questionnaire.questionsets[e].questions[t]),this.questionoptionsArray[t]=[],this.questionnaire.questionsets[e].questions[t].questionoptions)for(var s in this.questionnaire.questionsets[e].questions[t].questionoptions)this.questionoptionsArray[t].push(this.questionnaire.questionsets[e].questions[t].questionoptions[s])},e.prototype.sortQuestionsets=function(){this.questionsetsArray.sort(function(e,t){var s=e.position-t.position;return 0!=s?s:e.date_entered<t.date_entered?-1:e.date_entered>t.date_entered?1:0})},e.prototype.sortQuestions=function(){for(var e=0,t=this.questionsetsArray;e<t.length;e++){var s=t[e];1==s.shuffle?this.helper.shuffle(this.questionsArray[s.id]):this.questionsArray[s.id].sort(function(e,t){var s=e.position-t.position;return 0!=s?s:e.date_entered<t.date_entered?-1:e.date_entered>t.date_entered?1:0})}},e.prototype.sortQuestionoptions=function(){for(var e=0,t=this.questionsetsArray;e<t.length;e++)for(var s=t[e],i=0,n=this.questionsArray[s.id];i<n.length;i++){var o=n[i];if(o.questiontype.match(/^binary|single|multi|rating$/))1==o.parentQuestionset.shuffle?this.helper.shuffle(this.questionoptionsArray[o.id]):this.questionoptionsArray[o.id].sort(function(e,t){return e.position-t.position});else if("ratinggroup"===o.questiontype&&o.questionparameter.ratinggroup)for(var a=0,r=this.questionsArray[s.id];a<r.length;a++){for(var l=r[a],d=[],u=0,c=l.questionparameter.ratinggroup.entries;u<c.length;u++){for(var p=c[u],m=!1,g=0,h=this.questionoptionsArray[l.id];g<h.length;g++){var b=h[g];if(b.questionset_type_parameter_id===p.id){m=!0,d.push(b);break}}m||d.push({})}this.questionoptions[l.id]=d}}},e.prototype.sortData=function(){this.sortQuestionsets(),this.sortQuestions(),this.sortQuestionoptions()},e.prototype.buildQuestionMetaData=function(){for(var e=0,t=this.questionsetsArray;e<t.length;e++)for(var s=t[e],i=0,n=this.questionsArray[s.id];i<n.length;i++){var o=n[i];this.questionsMeta[o.id]={readonly:!1,finished:!1,parameter:o.questionparameter}}},e.prototype.questiontypeWithOptions=function(e){return null!==e.match(/^binary|single|multi|ist|rating|ratinggroup$/)},e.prototype.initAnswers=function(){for(var e=0,t=this.questionsetsArray;e<t.length;e++)for(var s=t[e],i=0,n=this.questionsArray[s.id];i<n.length;i++){var o=n[i];if(this.answers[o.id]||(this.answers[o.id]={}),this.questiontypeWithOptions(o.questiontype)){void 0===this.answers[o.id].options&&(this.answers[o.id].options={});for(var a=0,r=this.questionoptionsArray[o.id];a<r.length;a++){var l=r[a];this.answers[o.id].options[l.id]=!1}}else this.answers[o.id].optionlessAnswerValue=""}},e.prototype.loadParticipation_byParent=function(){var t=this;this.backend.getRequest("QuestionAnswers/ofParticipation/byParent/"+this.parentType+"/"+this.parentId).subscribe(function(e){t.questionnaireId=e.questionnaireId,t.loadQuestionnaire().subscribe(function(){t.participationId=e.participationId,t.answersBackup=_.clone(e.answers),t.insertLoadedAnswers(e.answers),t.isCompleted=!!e.isCompleted,t.isLoadedParticipation=!0})})},e.prototype.loadParticipation_byParticipation=function(){var t=this;this.backend.getRequest("QuestionAnswers/ofParticipation/byParticipation/"+this.participationId).subscribe(function(e){t.questionnaireId=e.questionnaireId,t.loadQuestionnaire().subscribe(function(){t.insertLoadedAnswers(e.answers),t.isCompleted=!!e.isCompleted,t.isLoadedParticipation=!0})})},e.prototype.insertLoadedAnswers=function(e){for(var t in e)if(void 0===this.answers[t]&&(this.answers[t]={}),void 0!==e[t].optionlessAnswerValue)this.answers[t].optionlessAnswerValue=e[t].optionlessAnswerValue;else if(!_.isEmpty(e[t].options))for(var s in void 0===this.answers[t].options&&(this.answers[t].options={}),e[t].options)this.answers[t].options[s]=e[t].options[s]},e.prototype.reload=function(){for(var e in this.isLoadedQuestionnaire=this.isLoadedParticipation=!1,this.questionsetsArray.length=0,this.questionsArray)delete this.questionsArray[e];for(e in this.questionoptionsArray)delete this.questionoptionsArray[e];for(e in this.questionoptions)delete this.questionoptions[e];for(e in this.questionnaire)delete this.questionnaire[e];this.initByParent?this.loadParticipation_byParent():this.initByParticipation?this.loadParticipation_byParticipation():this.initByQuestionnaire&&this.loadQuestionnaire()},e.prototype.determineNumOfFinishedQuestionsInQuestionset=function(e){return 0},e.prototype.save=function(e){var t=this;void 0===e&&(e=!1),this.isSaving=!0;var s="QuestionAnswers/ofParticipation/";s+="byParent/"+this.parentType+"/"+this.parentId;var i=new core_1.EventEmitter;return this.backend.postRequest(s,{},{setCompleted:e,answers:this.answers}).subscribe(function(e){t.isSaving=!1,t.isDirty=!1,t.isCompleted=!!e.isCompleted,i.emit(!0),t.broadcast.broadcastMessage("questionnaireParticipation.saved",{id:t.participationId,parentId:t.parentId,parentType:t.parentType})},function(e){t.toast.sendToast("Error saving questionnaire answers.","error",null,!1,"errorSavingQuestionnaireAnswers"),t.isSaving=!1,i.emit(!1)}),i},e.prototype.getData=function(){return this.answers},e.prototype.reset=function(){this.answers={},this.initAnswers(),this.insertLoadedAnswers(this.answersBackup)},__decorate([core_1.Injectable(),__metadata("design:paramtypes",[services_1.backend,services_1.toast,services_1.language,services_1.helper,services_1.broadcast])],e)}();exports.questionnaireParticipationService=questionnaireParticipationService;var QuestionsManager=function(){function QuestionsManager(e,t,s,i){this.language=e,this.model=t,this.backend=s,this.modalservice=i,this.showQuestionsetButtons=!1,this.questionsetAction=new core_1.EventEmitter,this.questions=[],this.currentQuestionId="",this.isLoading=!0,this.questiontypes=["single","multi","binary","rating","nps","ist","text"]}return QuestionsManager.prototype.ngOnInit=function(){var s=this;this.questiontypes_dom=this.language.getDisplayOptions("questionstypes_dom"),this.backend.getRequest("module/QuestionSets/"+this.model.id+"/related/questions",{limit:999}).subscribe(function(e){for(var t in e)s.questions.push(s.model.utils.backendModel2spice("Questions",e[t]));s.questions=s.questions.sort(function(e,t){var s=e.position-t.position;return 0==s?e.date_entered===t.date_entered?0:e.date_entered>t.date_entered?1:-1:s}),s.isLoading=!1})},QuestionsManager.prototype.addQuestion=function(e,t){t.preventDefault(),this.currentQuestionId="",this.openForm(e)},QuestionsManager.prototype.editQuestion=function(e){this.currentQuestionId=e,this.openForm()},QuestionsManager.prototype.openForm=function(t){var s=this;void 0===t&&(t=null),this.modalservice.openModal("QuestionsManagerAddModal").subscribe(function(e){e.instance.questionset=s.model,e.instance.questionid=s.currentQuestionId,e.instance.categorypool=s.categorypool,e.instance.questiontype=t,e.instance.response.subscribe(function(e){s.handleFormResponse(e)})})},QuestionsManager.prototype.getIndexOfQuestion=function(s){var i;return this.questions.some(function(e,t){if(e.id===s)return i=t,!0}),i},QuestionsManager.prototype.deleteQuestion=function(t){var s=this,i=this.getIndexOfQuestion(t);this.modalservice.confirm(this.language.getLabelFormatted("QST_DELETE_QUESTION_LONG",this.questions[i].name),this.language.getLabel("QST_DELETE_QUESTION")).subscribe(function(e){e&&(s.backend.deleteRequest("module/Questions/"+t),s.questions.splice(i,1))})},QuestionsManager.prototype.handleFormResponse=function(t){!1!==t&&(""===this.currentQuestionId?this.questions.push(t):this.questions.some(function(e){if(e.id==t.id)return e.name=t.name,!0}))},QuestionsManager.prototype.drop=function(e){var t=this.questions.splice(e.previousIndex,1);this.questions.splice(e.currentIndex,0,t[0]);for(var s=[],i=0,n=0,o=this.questions;n<o.length;n++){var a=o[n];a.position=i,s.push({id:a.id,position:i}),i++}this.backend.postRequest("module/Questions",{},s)},QuestionsManager.prototype.dragStarted=function(e){e.source.element.nativeElement.classList.add("slds-is-selected")},QuestionsManager.prototype.dragEnded=function(e){e.source.element.nativeElement.classList.remove("slds-is-selected")},__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionsManager.prototype,"showQuestionsetButtons",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionsManager.prototype,"categorypool",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],QuestionsManager.prototype,"questionsetAction",void 0),__decorate([core_1.Component({selector:"questions-manager",template:'<div class="slds-grid slds-grid_align-spread slds-grid--vertical-align-start x-slds-p-bottom--medium"><system-utility-icon cdkDragHandle [icon]="\'rows\'" [size]="\'small\'" style="cursor:move"></system-utility-icon><div class="slds-m-left_small slds-col_bump-right"><h2 *ngIf="!ref.innerHTML.trim()" class="slds-text-heading--medium"><system-label label="LBL_QUESTION_MANAGER"></system-label></h2><div #ref><ng-content></ng-content></div></div><div *ngIf="!isLoading"><button class="slds-button slds-button--icon slds-button--icon-border slds-button--icon-border-filled" *ngIf="showQuestionsetButtons" (click)="questionsetAction.emit(\'edit\')"><system-button-icon [icon]="\'edit\'" title="{{language.getLabel(\'LBL_EDIT\')}}"></system-button-icon></button> <button class="slds-button slds-button--icon slds-button--icon-border slds-button--icon-border-filled slds-m-right--small" *ngIf="showQuestionsetButtons" (click)="questionsetAction.emit(\'delete\')"><system-button-icon [icon]="\'delete\'" title="{{language.getLabel(\'LBL_DELETE\')}}"></system-button-icon></button> <span class="slds-m-left--xx-small"><button *ngIf="model.data.questiontype === \'ratinggroup\'" class="slds-button slds-button--neutral" (click)="addQuestion(\'ratinggroup\',$event)"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_QUESTION"></system-label></button><div *ngIf="model.data.questiontype !== \'ratinggroup\'" system-dropdown-trigger-simple class="slds-dropdown-trigger slds-dropdown-trigger_click"><button class="slds-button slds-button_icon slds-button_icon-border-filled slds-p-horizontal--x-small" style="width:auto" aria-haspopup="true" title="Frage anlegen â¦"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_QUESTION"></system-label>&nbsp;&hellip; <span class="slds-assistive-text">add Question â¦</span></button><div class="slds-dropdown slds-dropdown_right"><ul class="slds-dropdown__list" role="menu" aria-label="Show More"><li *ngFor="let qt of questiontypes" class="slds-dropdown__item" role="presentation"><a href="#" role="menuitem" tabindex="0" (click)="addQuestion(qt,$event)"><span class="slds-truncate">{{questiontypes_dom[qt]}}</span></a></li></ul></div></div></span></div></div><div *ngIf="!isLoading" class="dragboundary" cdkDropList (cdkDropListDropped)="drop($event)"><div *ngFor="let question of questions; let i = index;" class="slds-box slds-box_xx-small slds-m-top_small" cdkDrag cdkDragBoundary=".dragboundary" (cdkDragStarted)="dragStarted($event)" (cdkDragEnded)="dragEnded($event)"><div class="slds-grid slds-grid--vertical-align-center"><system-utility-icon cdkDragHandle [icon]="\'rows\'" [size]="\'x-small\'" style="cursor:move" class="slds-p-left--x-small"></system-utility-icon><p class="slds-truncate slds-p-left_x-small">{{question.name}}</p><div class="slds-col_bump-left" style="white-space:nowrap"><button class="slds-button slds-button--icon slds-button--icon-border slds-button--icon-border-filled" (click)="editQuestion(question.id)"><system-button-icon [icon]="\'edit\'" title="{{language.getLabel(\'LBL_EDIT\')}}"></system-button-icon></button> <button class="slds-button slds-button--icon slds-button--icon-border slds-button--icon-border-filled" (click)="deleteQuestion(question.id)"><system-button-icon [icon]="\'delete\'" title="{{language.getLabel(\'LBL_DELETE\')}}"></system-button-icon></button></div></div></div></div><system-spinner *ngIf="isLoading" style="display:block" class="slds-m-top--x-small"></system-spinner>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.backend,services_1.modal])],QuestionsManager)}();exports.QuestionsManager=QuestionsManager;var QuestionsetTypeParameters=function(){function QuestionsetTypeParameters(e,t,s){this.language=e,this.model=t,this.toast=s,this.sectionIsOpen=!0,this.questiontypeFieldconfig={readonly:!1}}return QuestionsetTypeParameters.prototype.ngOnInit=function(){var e=this;this.model.isLoading?this.model.data$.subscribe(function(){return e.doWhenLoaded()}):this.doWhenLoaded()},QuestionsetTypeParameters.prototype.doWhenLoaded=function(){this.questionsetHasQuestions()&&(this.questiontypeFieldconfig.readonly=!0)},QuestionsetTypeParameters.prototype.toggleSection=function(){this.sectionIsOpen=!this.sectionIsOpen},QuestionsetTypeParameters.prototype.getOpenStyle=function(){if(!this.sectionIsOpen)return{height:"0px",transform:"rotateX(90deg)"}},QuestionsetTypeParameters.prototype.questionsetHasQuestions=function(){var e=!1;return e=this.model&&this.model.data&&this.model.data.questions?0!==Object.keys(this.model.data.questions.beans).length:e},__decorate([core_1.Component({selector:"questionset-type-parameters",template:'<div class="slds-section" [ngClass]="{\'slds-is-open\':sectionIsOpen}"><h3 class="slds-section__title"><button class="slds-button slds-section__title-action" (click)="toggleSection()"><system-utility-icon [icon]="\'switch\'" [size]="\'x-small\'" [addclasses]="\'slds-section__title-action-icon slds-button__icon slds-button__icon_left\'"></system-utility-icon><span class="slds-truncate" title="Section Title"><system-label label="LBL_QUESTIONTYPE"></system-label></span></button></h3><div [ngStyle]="getOpenStyle()" class="slds-p-around--x-small"><div class="slds-form-element"><field-container [field]="\'questiontype\'" [fielddisplayclass]="\'slds-has-divider--bottom slds-p-vertical--x-small spice-fieldminheight\'" [fieldconfig]="questiontypeFieldconfig"></field-container></div><ng-container [ngSwitch]="model.data.questiontype"><div *ngSwitchCase="\'rating\'" class="slds-box slds-m-top--medium"><questionset-type-parameters-rating></questionset-type-parameters-rating></div><div *ngSwitchCase="\'text\'" class="slds-box slds-m-top--medium"><questionset-type-parameters-text></questionset-type-parameters-text></div><div *ngSwitchCase="\'nps\'" class="slds-box slds-m-top--medium"><questionset-type-parameters-nps></questionset-type-parameters-nps></div></ng-container></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.toast])],QuestionsetTypeParameters)}();exports.QuestionsetTypeParameters=QuestionsetTypeParameters;var QuestionsetTypeParametersRating=function(){function e(e,t,s,i,n){this.language=e,this.model=t,this.view=s,this.toast=i,this.helper=n,this.numEntries=5,this.entriesTable=[]}return Object.defineProperty(e.prototype,"editing",{get:function(){return this.view.isEditMode()},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.parseParams(),this.model.data$.subscribe(function(){return e.parseParams()})},e.prototype.parseParams=function(){var e;this.model.data.questiontypeparameter&&""!==this.model.data.questiontypeparameter?(e=JSON.parse(this.model.data.questiontypeparameter)).rating&&(this.numEntries=e.rating.numEntries,this.entriesTable=e.rating.entries):this.buildTable(),this.fieldNumEntries=this.numEntries},e.prototype.setNumEntries=function(t){var s=this;if(this.questionsetHasQuestions())return this.toast.sendToast(this.language.getLabel("MSG_CANTCHANGE_QUESTIONSEXISTS"),"warning",null,!0),void(t.target.value=this.numEntries);if(t.target.value<this.numEntries){for(var e=0,i=this.numEntries-1;i+1>t.target.value;i--)""===this.entriesTable[i].value&&""===this.entriesTable[i].text||e++;e?this.helper.confirm(this.language.getLabel("QST_DELETE_ENTRIES"),this.language.getLabel("QST_DELETE_ENTRIES_LONG")).subscribe(function(e){e?(s.numEntries=t.target.value,s.numEntries!=s.entriesTable.length&&(s.buildTable(),s.writeSettings())):t.target.value=s.numEntries}):this.numEntries=t.target.value}else this.numEntries=t.target.value;this.numEntries!=this.entriesTable.length&&(this.buildTable(),this.writeSettings())},e.prototype.questionsetHasQuestions=function(){var e=!1;return e=this.model&&this.model.data&&this.model.data.questions?0!==Object.keys(this.model.data.questions.beans).length:e},e.prototype.buildTable=function(){var e=this.entriesTable.length;if(this.entriesTable.length>this.numEntries)for(;e>this.numEntries;)this.entriesTable.pop(),e--;else for(;e<this.numEntries;)this.entriesTable.push({value:"",text:"",id:this.model.generateGuid()}),e++},e.prototype.writeSettings=function(){for(var e=this.model.data.questiontypeparameter&&""!==this.model.data.questiontypeparameter?JSON.parse(this.model.data.questiontypeparameter):{},t=0,s=this.entriesTable;t<s.length;t++){var i=s[t];i.value="string"==typeof i.value?i.value.trim():i.value,i.text=i.text.trim()}e.rating={numEntries:this.numEntries,entries:this.entriesTable},this.model.data.questiontypeparameter=JSON.stringify(e)},e.prototype.fillRange=function(e,t){for(var s=e<t,i=0,n=e;s&&n<=t||!s&&t<=n;s?n++:n--)this.entriesTable[i++].value=n;this.writeSettings()},__decorate([core_1.Component({selector:"questionset-type-parameters-rating",template:'<h4><system-label label="LBL_QUESTIONSTYPE_SETTINGS"></system-label></h4><div *ngIf="editing"><div class="slds-grid slds-grid_vertical-align-end slds-grid--align-spread"><div class="slds-col slds-form-element slds-p-vertical--small slds-text-align--left"><label class="slds-form-element__label"><system-label label="LBL_NUMBER_OF_ENTRIES"></system-label></label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [ngModel]="numEntries" (change)="setNumEntries($event)"><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option></select></div></div></div><div class="slds-col slds-p-vertical--small slds-text-align--right"><button class="slds-button slds-button_neutral" (click)="fillRange(1,numEntries)">1 â¦ {{numEntries}}</button> <button class="slds-button slds-button_neutral" (click)="fillRange(numEntries,1)">{{numEntries}} â¦ 1</button> <button class="slds-button slds-button_neutral" (click)="fillRange((numEntries-1)/-2,(numEntries-1)/2)">-{{(numEntries-1)/2}} â¦ +{{(numEntries-1)/2}}</button></div></div><table class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title_caps"><th scope="col" class="slds-text-align--right"><div class="slds-truncate"><system-label label="LBL_VALUE"></system-label></div></th><th scope="col"><div class="slds-truncate"><system-label label="LBL_TEXT"></system-label></div></th></tr></thead><tbody><tr *ngFor="let entry of entriesTable; let i = index;"><td><div class="slds-truncate"><input type="text" class="slds-input slds-text-align--right" [(ngModel)]="entriesTable[i].value" (change)="writeSettings()"></div></td><td><div class="slds-truncate"><input type="text" class="slds-input" [(ngModel)]="entriesTable[i].text" (change)="writeSettings()"></div></td></tr></tbody></table></div><div *ngIf="!editing"><table class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title_caps"><th scope="col"><div class="slds-truncate slds-text-align--right"><system-label label="LBL_VALUE"></system-label></div></th><th scope="col"><div class="slds-truncate"><system-label label="LBL_TEXT"></system-label></div></th></tr></thead><tbody><tr *ngFor="let entry of entriesTable; let i = index;"><td data-label="Close Date"><div class="slds-truncate slds-text-align--right">{{entriesTable[i].value || "&nbsp;"}}</div></td><td data-label="Prospecting"><div class="slds-truncate">{{entriesTable[i].text || "&nbsp;"}}</div></td></tr></tbody></table></div>',providers:[services_1.helper]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view,services_1.toast,services_1.helper])],e)}();exports.QuestionsetTypeParametersRating=QuestionsetTypeParametersRating;var QuestionsetTypeParametersNPS=function(){function e(e,t,s,i,n){this.language=e,this.model=t,this.view=s,this.toast=i,this.helper=n,this.textForScore0="",this.textForScore10="",this.componentId=_.uniqueId()}return Object.defineProperty(e.prototype,"editing",{get:function(){return this.view.isEditMode()},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.parseParams(),this.model.data$.subscribe(function(){return e.parseParams()})},e.prototype.parseParams=function(){var e=this.model.getField("questiontypeparameter");""===e||(e=JSON.parse(e)).nps&&(this.textForScore0=e.nps.textForScore0,this.textForScore10=e.nps.textForScore10)},e.prototype.writeSettings=function(){var e=this.model.data.questiontypeparameter&&""!==this.model.data.questiontypeparameter?JSON.parse(this.model.data.questiontypeparameter):{};e.nps={textForScore0:this.textForScore0,textForScore10:this.textForScore10},this.model.setField("questiontypeparameter",JSON.stringify(e))},__decorate([core_1.Component({selector:"questionset-type-parameters-nps",template:'<div class="slds-grid slds-grid--align-spread"><div class="slds-form-element slds-size--1-of-2 slds-p-right--x-small"><label class="slds-form-element__label" for="{{componentId}}-val-for-0">Text for Value 0</label><div class="slds-form-element__control"><input *ngIf="editing" type="text" id="{{componentId}}-val-for-0" class="slds-input" [(ngModel)]="textForScore0" (change)="writeSettings()"><div *ngIf="!editing" class="slds-has-divider--bottom slds-p-vertical--x-small spice-fieldminheight">{{textForScore0}}</div></div></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--x-small"><label class="slds-form-element__label" for="{{componentId}}-val-for-10">Text for Value 10</label><div class="slds-form-element__control"><input *ngIf="editing" type="text" id="{{componentId}}-val-for-10" class="slds-input" [(ngModel)]="textForScore10" (change)="writeSettings()"><div *ngIf="!editing" class="slds-has-divider--bottom slds-p-vertical--x-small spice-fieldminheight">{{textForScore10}}</div></div></div></div>',providers:[services_1.helper]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view,services_1.toast,services_1.helper])],e)}();exports.QuestionsetTypeParametersNPS=QuestionsetTypeParametersNPS;var QuestionsetTypeParametersText=function(){function e(e,t,s){this.language=e,this.model=t,this.view=s}return Object.defineProperty(e.prototype,"editing",{get:function(){return this.view.isEditMode()},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.parseParams(),this.model.data$.subscribe(function(){return e.parseParams()})},e.prototype.parseParams=function(){var e;!this.model.data.questiontypeparameter||""===this.model.data.questiontypeparameter||(e=JSON.parse(this.model.data.questiontypeparameter)).text&&(this.sequenced=e.text.sequenced)},e.prototype.writeSettings=function(){var e=this.model.data.questiontypeparameter&&""!==this.model.data.questiontypeparameter?JSON.parse(this.model.data.questiontypeparameter):{};e.text={sequenced:this.sequenced},this.model.data.questiontypeparameter=JSON.stringify(e)},e.prototype.click=function(){this.sequenced=!this.sequenced,this.writeSettings()},__decorate([core_1.Component({selector:"questionset-type-parameters-text",template:'<h4><system-label label="LBL_QUESTIONSTYPE_SETTINGS"></system-label></h4><div class="slds-grid slds-grid_vertical-align-end slds-grid--align-spread"><div class="slds-col slds-form-element slds-p-vertical--small slds-text-align--left"><span class="slds-checkbox"><input type="checkbox" name="options" id="checkbox-questions-sequenced" [checked]="sequenced" (change)="click()" [disabled]="!editing"> <label class="slds-checkbox__label" for="checkbox-questions-sequenced"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">Fragetext als Sequenz darstellen</span></label></span></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}();exports.QuestionsetTypeParametersText=QuestionsetTypeParametersText;var QuestionsManagerEditBasic=function(){function e(e,t,s){this.language=e,this.model=t,this.view=s,this.compId=_.uniqueId(),this.nameMissing=!1,this.view.isEditable=!0,this.view.setEditMode()}return e.prototype.ngOnInit=function(){this.model.data.questionparameter&&0!==this.model.data.questionparameter.length||(this.model.data.questionparameter="{}"),this.getQuestionparametersFromModel()},e.prototype.getQuestionparametersFromModel=function(){this.questionparameters=JSON.parse(this.model.getField("questionparameter"))},e.prototype.writeQuestionparametersToModel=function(){this.model.setField("questionparameter",JSON.stringify(this.questionparameters))},Object.defineProperty(e.prototype,"name",{get:function(){return this.model.getField("name")},set:function(e){this.model.setField("name",e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"questiontext",{get:function(){return this.model.getField("questiontext")},set:function(e){this.model.setField("questiontext",e)},enumerable:!1,configurable:!0}),e.prototype.questiontextBlurred=function(){this.name||(this.name=this.questiontext,this.nameChanged())},e.prototype.nameBlurred=function(){this.name||(this.name=this.questiontext,this.nameChanged())},e.prototype.nameChanged=function(){this.nameMissing=!this.name},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"categorypool",void 0),__decorate([core_1.Component({selector:"questions-manager-edit-basic",template:""}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(),QuestionsManagerEditBasicWithOptions=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i.options=[],i.isBuilt=!1,i}return __extends(e,n),e.prototype.ngOnInit=function(){n.prototype.ngOnInit.call(this)},e.prototype.addOptions=function(e){void 0===e&&(e=1);for(var t=[],s=0;s<e;s++){var i=this.model.generateGuid();this.model.data.questionoptions||(this.model.data.questionoptions={}),this.model.data.questionoptions.beans||(this.model.data.questionoptions.beans={}),this.model.data.questionoptions.beans[i]={id:i,question_id:this.model.id,name:"",categories:"",points:"",position:this.options.length,new_with_id:!0},this.options.push(this.model.data.questionoptions.beans[i]),t.push(i)}return t},e.prototype.deleteOption=function(e){this.model.data.questionoptions.beans[this.options[e].id].new_with_id?delete this.model.data.questionoptions.beans[this.options[e].id]:this.model.data.questionoptions.beans[this.options[e].id].deleted=1,this.options.splice(e,1)},e.prototype.optionUp=function(e){var t,s;0!==e&&(t=Number(this.options[e-1].position),s=this.options[e-1],this.options[e-1]=this.options[e],this.options[e]=s,this.options[e-1].position=t,this.options[e].position=t+1)},e.prototype.optionDown=function(e){var t,s;e>this.options.length-1||(t=this.options[e].position,s=this.options[e+1],this.options[e+1]=this.options[e],this.options[e]=s,this.options[e].position=t,this.options[e+1].position=t+1)},e.prototype.optionEventHappened=function(e,t){"delete"===e?this.deleteOption(t):"up"===e?this.optionUp(t):"down"===e&&this.optionDown(t)},__decorate([core_1.Component({selector:"questions-manager-edit-basic-with-options",template:""}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(exports.QuestionsManagerEditBasic=QuestionsManagerEditBasic),QuestionsManagerEditMulti=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i}return __extends(e,n),e.prototype.ngOnInit=function(){var t=this;n.prototype.ngOnInit.call(this),void 0===this.questionparameters.minAnswers&&(this.questionparameters.minAnswers="",this.writeQuestionparametersToModel()),void 0===this.questionparameters.maxAnswers&&(this.questionparameters.maxAnswers="",this.writeQuestionparametersToModel()),void 0===this.questionparameters.hasInfosCorrectness&&(this.questionparameters.hasInfosCorrectness=!1,this.writeQuestionparametersToModel()),this.model.data$.subscribe(function(e){t.model.isLoading||t.isBuilt||t.buildEntries()})},e.prototype.buildEntries=function(){var s=this;this.isBuilt=!0,this.model.data.questionoptions&&this.model.data.questionoptions.beans||(this.model.data.questionoptions={beans:{}});var e,t=Object.keys(this.model.data.questionoptions.beans);for(e in t.sort(function(e,t){return s.model.data.questionoptions.beans[e].position-s.model.data.questionoptions.beans[t].position}),t)this.options[e]=this.model.data.questionoptions.beans[t[e]]},e.prototype.onChange_numAnswers=function(){this.writeQuestionparametersToModel()},e.prototype.onChange_hasInfosCorrectness=function(e){this.questionparameters.hasInfosCorrectness=e.target.checked,this.writeQuestionparametersToModel()},e.prototype.doBeforeSavingQuestion=function(){this.questionparameters.hasInfosCorrectness||this.options.some(function(e){return e.is_correct_option=!1})},__decorate([core_1.Component({selector:"questions-manager-edit-multi",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%;"><label for="{{compId}}-questiontext" class="slds-form-element__label"><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div style="width:4rem"><label class="slds-form-element__label"><system-label label="LBL_IMAGE"></system-label></label><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'left bottom\'" (change)="change()"></field-container></div></div><div class="slds-grid slds-p-top_xx-small"><div class="slds-p-right--medium" style="width:100%;" [ngClass]="{\'slds-has-error\':nameMissing}"><label for="{{compId}}-name" class="slds-form-element__label"><abbr class="slds-required" title="required">*</abbr><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (change)="nameChanged()"></div><div class="slds-p-left_medium slds-text-align_center" style="white-space:nowrap"><span class="slds-checkbox slds-checkbox_stacked"><input id="{{compId}}-rf" type="checkbox" [checked]="questionparameters.hasInfosCorrectness" (change)="onChange_hasInfosCorrectness($event)"> <label class="slds-checkbox__label" for="{{compId}}-rf"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">R/F</span></label></span></div><div class="slds-p-left_medium slds-text-align_center" style="white-space:nowrap"><label for="{{compId}}-minanswers" class="slds-form-element__label slds-m-horizontal--none"><system-label label="LBL_MIN_MAX_ANSWERS"></system-label></label><br><input id="{{compId}}-minanswers" type="text" class="slds-input slds-text-align--right slds-m-right--xx-small" style="width:unset" [(ngModel)]="questionparameters.minAnswers" (change)="onChange_numAnswers()" size="3"><input type="text" class="slds-input slds-text-align--right" style="width:unset" [(ngModel)]="questionparameters.maxAnswers" (change)="onChange_numAnswers()" size="3"></div></div><system-spinner *ngIf="model.isLoading"></system-spinner><table *ngIf="options.length" class="slds-table slds-table_bordered slds-m-vertical--medium"><thead><tr><th *ngIf="questionparameters.hasInfosCorrectness" class="slds-text-align--center">R</th><th scope="col" width="50%"><div class="slds-truncate"><system-label label="LBL_TEXT"></system-label></div></th><th scope="col" width="4rem"><div class="slds-truncate"><system-label label="LBL_IMAGE"></system-label></div></th><th scope="col" width="50%"><div class="slds-truncate"><system-label label="LBL_CATEGORIES"></system-label></div></th><th scope="col"><div class="slds-truncate slds-text-align_right"><system-label label="LBL_POINTS"></system-label></div></th><th></th></tr></thead><tbody><tr questions-manager-edit-option-single-multi *ngFor="let option of options; let i = index;" [hasInfosCorrectness]="questionparameters.hasInfosCorrectness" [categorypool]="categorypool" [option]="option" [isFirstRow]="i === 0" [isLastRow]="i === options.length-1" (event)="optionEventHappened($event,i)"></tr></tbody></table><div *ngIf="!model.isLoading" class="slds-text-align_right slds-m-top--medium"><button class="slds-button slds-button--neutral" (click)="addOptions()"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_ADD_ANSWER_OPTION"></system-label></button></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(exports.QuestionsManagerEditBasicWithOptions=QuestionsManagerEditBasicWithOptions);exports.QuestionsManagerEditMulti=QuestionsManagerEditMulti;var QuestionsManagerEditRating=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i.questionset={},i.view.isEditable=!0,i.view.setEditMode(),i}return __extends(e,n),e.prototype.ngOnInit=function(){var t=this;n.prototype.ngOnInit.call(this),void 0===this.questionparameters.altTexts&&(this.questionparameters.altTexts={},this.writeQuestionparametersToModel()),this.model.data$.subscribe(function(e){t.model.isLoading||t.isBuilt||t.buildEntries()})},e.prototype.buildEntries=function(){var s=this;this.isBuilt=!0,this.model.data.questionoptions&&this.model.data.questionoptions.beans||(this.model.data.questionoptions={beans:{}});var e,t=Object.keys(this.model.data.questionoptions.beans);for(e in t.sort(function(e,t){return s.model.data.questionoptions.beans[e].position-s.model.data.questionoptions.beans[t].position}),t)this.options[e]=this.model.data.questionoptions.beans[t[e]],"undefined"===this.questionparameters.altTexts[this.options[e].id]&&(this.questionparameters.altTexts[this.options[e].id]="");this.numEntries=this.options.length},e.prototype.setNumEntries=function(){if(this.numEntries!=this.options.length)if(this.numEntries>this.options.length)this.addOptions(this.numEntries-this.options.length);else if(this.numEntries<this.options.length)for(var e=this.numEntries,t=this.options.length;e<t;t--)this.deleteOption(t-1)},e.prototype.fillRange=function(e,t){for(var s=e<t,i=0,n=e;s&&n<=t||!s&&t<=n;s?n++:n--)this.options[i++].name=n},e.prototype.addOptions=function(e){var t=this;void 0===e&&(e=1);e=n.prototype.addOptions.call(this,e);return this.numEntries=this.options.length,e.forEach(function(e){t.questionparameters.altTexts[e]=""}),e},e.prototype.deleteOption=function(e){delete this.questionparameters.altTexts[this.options[e].id],n.prototype.deleteOption.call(this,e),this.numEntries=this.options.length},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"questionset",void 0),__decorate([core_1.Component({selector:"questions-manager-edit-rating",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%;"><label for="{{compId}}-questiontext" class="slds-form-element__label"><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div style="width:4rem"><label class="slds-form-element__label slds-m-horizontal--none"><system-label label="LBL_IMAGE"></system-label></label><br><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'\'"></field-container></div></div><div class="slds-m-top--xx-small slds-m-bottom--large" [ngClass]="{\'slds-has-error\':nameMissing}"><label for="{{compId}}-name" class="slds-form-element__label"><abbr class="slds-required" title="required">*</abbr><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (blur)="nameBlurred()" (change)="nameChanged()"></div><div class="slds-grid slds-grid--align-spread slds-grid_vertical-align-center slds-m-top_small"><div class="slds-form-element"><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="numEntries" (change)="setNumEntries()"><option *ngFor="let i of [3,4,5,6,7,8,9,10]" value="{{i}}">{{i}}<system-label [label]="\'LBL_ENTRIES\'"></system-label></option></select></div></div></div><div class="slds-p-horizontal--xx-small"><system-label [label]="\'LBL_OR\'"></system-label></div><button class="slds-button slds-button--neutral slds-col--bump-right" (click)="addOptions()"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_ADD_ENTRY"></system-label></button> <span><system-label [label]="\'LBL_SET_VALUES\'"></system-label>:&nbsp;</span> <button class="slds-button slds-button_neutral" (click)="fillRange(1,options.length)">1 â¦ {{options.length}}</button> <button class="slds-button slds-button_neutral" (click)="fillRange(options.length,1)">{{options.length}} â¦ 1</button> <button class="slds-button slds-button_neutral" (click)="fillRange((options.length-1)/-2,(options.length-1)/2)">-{{(options.length-1)/2}} â¦ +{{(options.length-1)/2}}</button></div><system-spinner *ngIf="model.isLoading"></system-spinner><table *ngIf="options.length" class="slds-table slds-table_bordered slds-m-top_x-small"><thead><tr><th scope="col" width="10%"><div class="slds-truncate"><system-label label="LBL_VALUE"></system-label></div></th><th scope="col" width="50%"><div class="slds-truncate"><system-label label="LBL_ADDITIONAL_TEXT"></system-label> (<system-label label="LBL_OPTIONAL"></system-label>)</div></th><th scope="col" width="4rem"><div class="slds-truncate"><system-label label="LBL_IMAGE"></system-label></div></th><th scope="col" width="50%"><div class="slds-truncate"><system-label label="LBL_CATEGORIES"></system-label></div></th><th scope="col"><div class="slds-truncate slds-text-align_right"><system-label label="LBL_POINTS"></system-label></div></th><th></th></tr></thead><tbody><tr *ngFor="let option of options; let i = index; let isFirstRow = first; let isLastRow = last"><td width="10%"><div><input type="text" class="slds-input" [(ngModel)]="option.name"></div></td><td width="50%"><div><input type="text" class="slds-input" [(ngModel)]="questionparameters.altTexts[option.id]"></div></td><td style="width:4rem"><field-container [system-model-provider]="{ module: \'QuestionOptions\', id: option.id, data: option }" [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'\'"></field-container></td><td width="50%"><div><questions-manager-edit-categories [option]="option" [categorypool]="categorypool"></questions-manager-edit-categories></div></td><td><div><input type="text" class="slds-input slds-text-align_right" style="width:unset" [(ngModel)]="option.points" size="4"></div></td><td><button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="optionUp(i)" title="{{language.getLabel(\'LBL_UP\')}}" [disabled]="isFirstRow"><system-button-icon [icon]="\'arrowup\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_UP"></system-label></span></button> <button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="optionDown(i)" title="{{language.getLabel(\'LBL_DOWN\')}}" [disabled]="isLastRow"><system-button-icon [icon]="\'arrowdown\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_DOWN"></system-label></span></button><button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="deleteOption(i)" title="{{language.getLabel(\'LBL_DELETE\')}}"><system-button-icon [icon]="\'delete\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_DELETE"></system-label></span></button></td></tr></tbody></table>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(QuestionsManagerEditBasicWithOptions);exports.QuestionsManagerEditRating=QuestionsManagerEditRating;var QuestionsManagerEditNPS=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i.forCategories={categories:""},i}return __extends(e,n),e.prototype.ngOnInit=function(){n.prototype.ngOnInit.call(this),void 0===this.questionparameters.textForScore0&&(this.questionparameters.textForScore0="",this.writeQuestionparametersToModel()),void 0===this.questionparameters.textForScore10&&(this.questionparameters.textForScore10="",this.writeQuestionparametersToModel())},Object.defineProperty(e.prototype,"textForScore0",{get:function(){return this.questionparameters.textForScore0},set:function(e){this.questionparameters.textForScore0=e,this.writeQuestionparametersToModel()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"textForScore10",{get:function(){return this.questionparameters.textForScore10},set:function(e){this.questionparameters.textForScore10=e,this.writeQuestionparametersToModel()},enumerable:!1,configurable:!0}),e.prototype.categoriesChanged=function(){this.questionparameters.categories=this.forCategories.categories,this.writeQuestionparametersToModel()},e.prototype.getQuestionparametersFromModel=function(){n.prototype.getQuestionparametersFromModel.call(this),this.forCategories.categories=this.questionparameters.categories},e.prototype.writeQuestionparametersToModel=function(){this.questionparameters.categories=this.forCategories.categories,n.prototype.writeQuestionparametersToModel.call(this)},__decorate([core_1.Component({selector:"questions-manager-edit-nps",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%;"><label for="{{compId}}-questiontext" class="slds-form-element__label"><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div style="width:4rem"><label class="slds-form-element__label slds-m-horizontal--none"><system-label label="LBL_IMAGE"></system-label></label><br><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'\'"></field-container></div></div><div class="slds-m-top_xx-small" [ngClass]="{\'slds-has-error\':nameMissing}"><label for="{{compId}}-name" class="slds-form-element__label"><abbr class="slds-required" title="required">*</abbr><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (blur)="nameBlurred()" (change)="nameChanged()"></div><div class="slds-grid slds-grid--align-spread slds-m-top_xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--x-small"><label class="slds-form-element__label" for="questionsmanagereditnps-val-for-0">Text for Value 0</label><div class="slds-form-element__control"><input type="text" id="questionsmanagereditnps-val-for-0" class="slds-input" [(ngModel)]="textForScore0"></div></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--x-small"><label class="slds-form-element__label" for="questionsmanagereditnps-val-for-10">Text for Value 10</label><div class="slds-form-element__control"><input type="text" id="questionsmanagereditnps-val-for-10" class="slds-input" [(ngModel)]="textForScore10"></div></div></div><div class="slds-m-top_xx-small"><questions-manager-edit-categories [showLabel]="true" [option]="forCategories" id="questionsmanagereditnps-categories" [categorypool]="categorypool" (change)="categoriesChanged()"></questions-manager-edit-categories></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(QuestionsManagerEditBasic);exports.QuestionsManagerEditNPS=QuestionsManagerEditNPS;var QuestionsManagerEditBinary=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i}return __extends(e,n),e.prototype.ngOnInit=function(){var t=this;n.prototype.ngOnInit.call(this),this.model.data$.subscribe(function(e){t.model.isLoading||t.isBuilt||t.buildEntries()})},e.prototype.buildEntries=function(){var s=this;this.isBuilt=!0,this.model.data.questionoptions&&this.model.data.questionoptions.beans||(this.model.data.questionoptions={beans:{}});var e=Object.keys(this.model.data.questionoptions.beans);e.sort(function(e,t){return s.model.data.questionoptions.beans[e].position-s.model.data.questionoptions.beans[t].position});for(var t,i=0;i<2;i++)e[i]&&this.model.data.questionoptions.beans[e[i]]||(t=this.model.generateGuid(),e[i]||e.push(t),this.model.data.questionoptions.beans[t]={id:t,question_id:this.model.id,name:"",categories:"",points:"",position:i}),this.options[i]=this.model.data.questionoptions.beans[e[i]]},e.prototype.exchangeOptions=function(){var e=this.options[0];this.options[0]=this.options[1],this.options[1]=e,this.options[0].position=0,this.options[1].position=1,this.generateName()},e.prototype.handleChange=function(e){!0===e&&this.generateName()},e.prototype.generateName=function(){!this.name&&this.options[0].name&&this.options[1].name&&(this.name=this.options[0].name+" / "+this.options[1].name)},__decorate([core_1.Component({selector:"questions-manager-edit-binary",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%;" [ngClass]="{\'slds-has-error\':nameMissing}"><label for="{{compId}}-questiontext" class="slds-form-element__label"><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div class="x-slds-p-right--medium" style="width:100%;"><label for="{{compId}}-name" class="slds-form-element__label"><abbr class="slds-required" title="required">*</abbr><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (blur)="nameBlurred()" (change)="nameChanged()"></div></div><system-spinner *ngIf="options.length === 0" class="slds-p-vertical--xx-large" style="display:block"></system-spinner><div *ngIf="options.length > 1" class="slds-grid slds-grid_vertical-align-center slds-m-top_medium"><table class="slds-table slds-table_bordered"><thead><tr><th></th><th scope="col" width="50%"><system-label label="LBL_TEXT"></system-label></th><th scope="col" width="4rem"><system-label label="LBL_IMAGE"></system-label></th><th scope="col" width="50%"><system-label label="LBL_CATEGORIES"></system-label></th><th scope="col" class="slds-text-align_right"><system-label label="LBL_POINTS"></system-label></th><th></th></tr></thead><tbody><tr class="no-hover"><td colspan="5" style="padding:0;border:none"></td><td rowspan="3"><button class="slds-button slds-button_icon slds-button_icon-border slds-m-left--x-small" (click)="exchangeOptions()"><system-button-icon [icon]="\'replace\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_EXCHANGE"></system-label></span></button></td></tr><tr *ngFor="let option of options; let i = index;" questions-manager-edit-binary-option [option]="option" [categorypool]="categorypool" [side]="i == 0 ? \'l\':\'r\'" (dataChanged)="handleChange($event)"></tr></tbody></table></div>',styles:["tr.no-hover:hover td { background-color: inherit; box-shadow: none !important; }"]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(QuestionsManagerEditBasicWithOptions);exports.QuestionsManagerEditBinary=QuestionsManagerEditBinary;var QuestionsManagerEditBinaryOption=function(){function e(e,t,s,i){this.language=e,this.metadata=t,this.model=s,this.view=i,this.dataChanged=new core_1.EventEmitter,this.view.isEditable=!0,this.view.setEditMode()}return e.prototype.ngOnInit=function(){this.model.module="QuestionOptions",this.model.id=this.option.id,this.model.data=this.option},e.prototype.ngOnChanges=function(){this.model.id=this.option.id,this.model.data=this.option},e.prototype.change=function(){this.option.name=this.option.text,this.option.name=this.option.name.replace(/\s/g," "),50<this.option.name.length&&(this.option.name=this.option.name.substring(0,49)+"â¦"),this.dataChanged.emit(!0)},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"categorypool",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"option",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"side",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"dataChanged",void 0),__decorate([core_1.Component({selector:"[questions-manager-edit-binary-option]",template:'<td>{{side === \'l\' ? language.getLabel(\'LBL_LEFT\'):language.getLabel(\'LBL_RIGHT\')}}</td><td><textarea style="display:block" class="slds-textarea slds-m-vertical--x-small" [(ngModel)]="option.text" (change)="change()" rows="5"></textarea></td><td width="4rem"><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'\'" (change)="change()"></field-container></td><td><questions-manager-edit-categories [option]="option" [categorypool]="categorypool"></questions-manager-edit-categories></td><td><input type="text" class="slds-input slds-text-align_right" style="width:unset" size="4" [(ngModel)]="option.points" (change)="change()"></td>',providers:[services_1.model]}),__metadata("design:paramtypes",[services_1.language,services_1.metadata,services_1.model,services_1.view])],e)}();exports.QuestionsManagerEditBinaryOption=QuestionsManagerEditBinaryOption;var QuestionsManagerEditSingle=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i.view.isEditable=!0,i.view.setEditMode(),i}return __extends(e,n),e.prototype.ngOnInit=function(){var t=this;n.prototype.ngOnInit.call(this),void 0===this.questionparameters.formatOptionsHorizontal&&(this.questionparameters.formatOptionsHorizontal=!1,this.writeQuestionparametersToModel()),this.model.data$.subscribe(function(e){t.model.isLoading||t.isBuilt||t.buildEntries()})},e.prototype.buildEntries=function(){var s=this;this.isBuilt=!0,this.model.data.questionoptions&&this.model.data.questionoptions.beans||(this.model.data.questionoptions={beans:{}});var e,t=Object.keys(this.model.data.questionoptions.beans);for(e in t.sort(function(e,t){return s.model.data.questionoptions.beans[e].position-s.model.data.questionoptions.beans[t].position}),t)this.options[e]=this.model.data.questionoptions.beans[t[e]]},e.prototype.onChange_formatOptionsHorizontal=function(e){this.questionparameters.formatOptionsHorizontal=e.target.checked,this.writeQuestionparametersToModel()},__decorate([core_1.Component({selector:"questions-manager-edit-single",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%;"><label for="{{compId}}-questiontext" class="slds-form-element__label"><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div style="width:4rem"><label class="slds-form-element__label"><system-label label="LBL_IMAGE"></system-label></label><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'left bottom\'"></field-container></div></div><div class="slds-grid slds-p-top_xx-small"><div class="slds-p-right--medium" style="width:100%;" [ngClass]="{\'slds-has-error\':nameMissing}"><label for="{{compId}}-name" class="slds-form-element__label"><abbr class="slds-required" title="required">*</abbr><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (blur)="nameBlurred()" (change)="nameChanged()"></div><div><div class="slds-form-element"><div class="slds-form-element__control"><span class="slds-checkbox slds-checkbox_stacked"><input name="options" id="{{compId}}-cb-hor" value="on" type="checkbox" [checked]="questionparameters.formatOptionsHorizontal" (change)="onChange_formatOptionsHorizontal($event)"> <label class="slds-checkbox__label" for="{{compId}}-cb-hor"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">horizontal</span></label></span></div></div></div></div><system-spinner *ngIf="model.isLoading"></system-spinner><table *ngIf="options.length" class="slds-table slds-table_bordered slds-m-vertical--medium"><thead><tr><th scope="col" width="50%"><div class="slds-truncate"><system-label label="LBL_TEXT"></system-label></div></th><th scope="col" width="4rem"><div class="slds-truncate"><system-label label="LBL_IMAGE"></system-label></div></th><th scope="col" width="50%"><div class="slds-truncate"><system-label label="LBL_CATEGORIES"></system-label></div></th><th scope="col"><div class="slds-truncate slds-text-align_right"><system-label label="LBL_POINTS"></system-label></div></th><th></th></tr></thead><tbody><tr questions-manager-edit-option-single-multi *ngFor="let option of options; let i = index;" [categorypool]="categorypool" [option]="option" [isFirstRow]="i === 0" [isLastRow]="i === options.length-1" (event)="optionEventHappened($event,i)"></tr></tbody></table><div *ngIf="!model.isLoading" class="slds-text-align_right slds-m-top--medium"><button class="slds-button slds-button--neutral" (click)="addOptions()"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_ADD_ANSWER_OPTION"></system-label></button></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(QuestionsManagerEditBasicWithOptions);exports.QuestionsManagerEditSingle=QuestionsManagerEditSingle;var QuestionsManagerEditText=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i.answer={},i}return __extends(e,n),Object.defineProperty(e.prototype,"sequenced",{get:function(){return!!this.questionparameters.sequenced},set:function(e){this.questionparameters.sequenced=e,this.writeQuestionparametersToModel()},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){for(var e in n.prototype.ngOnInit.call(this),void 0===this.questionparameters.sequenced&&(this.sequenced=!1),this.model.data.questionoptions&&this.model.data.questionoptions.beans||(this.model.data.questionoptions={beans:{}}),this.model.data.questionoptions.beans){this.answer=this.model.data.questionoptions.beans[e];break}var t;0===Object.keys(this.answer).length&&(t=this.model.generateGuid(),this.answer=this.model.data.questionoptions.beans[t]={id:t,question_id:this.model.id,name:"",categories:"",points:""})},__decorate([core_1.Component({selector:"questions-manager-edit-text",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%"><label for="{{compId}}-questiontext" class="slds-form-element__label"><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div style="width:4rem"><label class="slds-form-element__label slds-m-horizontal--none"><system-label label="LBL_IMAGE"></system-label></label><br><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'\'"></field-container></div></div><div class="slds-p-top_xx-small"><div [ngClass]="{\'slds-has-error\':nameMissing}"><label for="{{compId}}-name" class="slds-form-element__label"><abbr class="slds-required" title="required">*</abbr><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (blur)="nameBlurred()" (change)="nameChanged()"></div></div><div class="slds-p-top_xx-small slds-grid slds-grid_align-spread slds-grid_vertical-align-end"><div class="slds-size_1-of-4 slds-p-right_medium"><label for="{{compId}}-answer" class="slds-form-element__label"><system-label label="LBL_CORRECT_ANSWER"></system-label></label> <input id="{{compId}}-answer" [system-trim-input] type="text" class="slds-input" [(ngModel)]="answer.name"></div><system-checkbox [(ngModel)]="sequenced"><system-label label="Fragetext als Sequenz darstellen"></system-label></system-checkbox></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(QuestionsManagerEditBasic);exports.QuestionsManagerEditText=QuestionsManagerEditText;var QuestionsManagerEditIst=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i}return __extends(e,n),e.prototype.ngOnInit=function(){var t=this;n.prototype.ngOnInit.call(this),this.model.data$.subscribe(function(e){t.model.isLoading||t.isBuilt||t.buildEntries()})},e.prototype.buildEntries=function(){var s=this;this.isBuilt=!0,this.model.data.questionoptions&&this.model.data.questionoptions.beans||(this.model.data.questionoptions={beans:{}});var e,t=Object.keys(this.model.data.questionoptions.beans);for(e in t.sort(function(e,t){return s.model.data.questionoptions.beans[e].position-s.model.data.questionoptions.beans[t].position}),t)this.options[e]=this.model.data.questionoptions.beans[t[e]]},__decorate([core_1.Component({selector:"questions-manager-edit-ist",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%"><label for="{{compId}}-questiontext" class="slds-form-element__label"><abbr class="slds-required" title="required">*</abbr><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div style="width:100%" [ngClass]="{\'slds-has-error\':nameMissing}"><label for="{{compId}}-name" class="slds-form-element__label"><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (blur)="nameBlurred()" (change)="nameChanged()"></div></div><system-spinner *ngIf="model.isLoading"></system-spinner><table *ngIf="options.length" class="slds-table slds-table_bordered slds-m-vertical--medium"><thead><tr><th scope="col" width="25%"><div class="slds-truncate"><system-label label="LBL_VALUE"></system-label></div></th><th scope="col" width="25%"><div class="slds-truncate"><system-label label="LBL_OPTIONS"></system-label></div></th><th scope="col" width="25%"><div class="slds-truncate"><system-label label="LBL_CATEGORIES"></system-label></div></th><th scope="col" width="25%"><div class="slds-truncate"><system-label label="LBL_POINTS"></system-label></div></th><th></th></tr></thead><tbody><tr questions-manager-edit-option-ist *ngFor="let option of options; let i = index;" [categorypool]="categorypool" [option]="option" [isFirstRow]="i === 0" [isLastRow]="i === options.length-1" (event)="optionEventHappened($event,i)"></tr></tbody></table><div *ngIf="!model.isLoading" class="slds-text-align_right slds-m-top--medium"><button class="slds-button slds-button--neutral" (click)="addOptions()"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_ADD_ANSWER_OPTION"></system-label></button></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(QuestionsManagerEditBasicWithOptions);exports.QuestionsManagerEditIst=QuestionsManagerEditIst;var QuestionsManagerEditOptionIst=function(){function e(e,t,s,i,n){this.language=e,this.metadata=t,this.model=s,this.view=i,this.modalservice=n,this.event=new core_1.EventEmitter,this.view.isEditable=!0,this.view.setEditMode()}return e.prototype.ngOnInit=function(){this.model.module="QuestionOptions",this.model.id=this.option.id,this.model.data=this.option},e.prototype.deleteOption=function(){var t=this;this.modalservice.confirm(this.language.getLabelFormatted("QST_DELETE_ANSWER_OPTION_LONG",this.option.name),this.language.getLabel("QST_DELETE_ANSWER_OPTION")).subscribe(function(e){e&&t.event.emit("delete")})},e.prototype.change=function(){},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"categorypool",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"event",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"option",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],e.prototype,"isFirstRow",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],e.prototype,"isLastRow",void 0),__decorate([core_1.Output(),__metadata("design:type",Boolean)],e.prototype,"isDirty",void 0),__decorate([core_1.Component({selector:"[questions-manager-edit-option-ist]",template:'<td width="50%"><div><input type="text" class="slds-input" [(ngModel)]="option.answer" (change)="change()"></div></td><td style="width:4rem"><div><input type="text" class="slds-input" [(ngModel)]="option.description" (change)="change()"></div></td><td width="50%"><div><questions-manager-edit-categories [option]="option" [categorypool]="categorypool"></questions-manager-edit-categories></div></td><td width="10%"><div><input type="text" class="slds-input" [(ngModel)]="option.points" (change)="change()"></div></td><td><button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="deleteOption()" title="{{language.getLabel(\'LBL_DELETE\')}}"><system-button-icon [icon]="\'delete\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_DELETE"></system-label></span></button></td>',providers:[services_1.model,services_1.view]}),__metadata("design:paramtypes",[services_1.language,services_1.metadata,services_1.model,services_1.view,services_1.modal])],e)}();exports.QuestionsManagerEditOptionIst=QuestionsManagerEditOptionIst;var QuestionsManagerEditOptionSingleMulti=function(){function e(e,t,s,i,n){this.language=e,this.metadata=t,this.model=s,this.view=i,this.modalservice=n,this.event=new core_1.EventEmitter,this.view.isEditable=!0,this.view.setEditMode()}return e.prototype.ngOnInit=function(){this.model.module="QuestionOptions",this.model.id=this.option.id,this.model.data=this.option},e.prototype.deleteOption=function(){var t=this;this.modalservice.confirm(this.language.getLabelFormatted("QST_DELETE_ANSWER_OPTION_LONG",this.option.name),this.language.getLabel("QST_DELETE_ANSWER_OPTION")).subscribe(function(e){e&&t.event.emit("delete")})},e.prototype.onChange_isCorrectOption=function(e){this.option.is_correct_option=e.target.checked},e.prototype.optionUp=function(){this.event.emit("up")},e.prototype.optionDown=function(){this.event.emit("down")},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"categorypool",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"event",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"option",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],e.prototype,"isFirstRow",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],e.prototype,"isLastRow",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],e.prototype,"hasInfosCorrectness",void 0),__decorate([core_1.Output(),__metadata("design:type",Boolean)],e.prototype,"isDirty",void 0),__decorate([core_1.Component({selector:"[questions-manager-edit-option-single-multi]",template:'<td *ngIf="hasInfosCorrectness" width="0"><input type="checkbox" [checked]="option.is_correct_option==\'1\'" (change)="onChange_isCorrectOption($event)"></td><td width="50%"><div><input type="text" class="slds-input" [(ngModel)]="option.name"></div></td><td style="width:4rem"><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'\'"></field-container></td><td width="50%"><div><questions-manager-edit-categories [option]="option" [categorypool]="categorypool"></questions-manager-edit-categories></div></td><td><div><input type="text" class="slds-input slds-text-align_right" style="width:unset" [(ngModel)]="option.points" size="4"></div></td><td><button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="optionUp()" title="{{language.getLabel(\'LBL_UP\')}}" [disabled]="isFirstRow"><system-button-icon [icon]="\'arrowup\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_UP"></system-label></span></button> <button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="optionDown()" title="{{language.getLabel(\'LBL_DOWN\')}}" [disabled]="isLastRow"><system-button-icon [icon]="\'arrowdown\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_DOWN"></system-label></span></button><button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="deleteOption()" title="{{language.getLabel(\'LBL_DELETE\')}}"><system-button-icon [icon]="\'delete\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_DELETE"></system-label></span></button></td>',providers:[services_1.model,services_1.view]}),__metadata("design:paramtypes",[services_1.language,services_1.metadata,services_1.model,services_1.view,services_1.modal])],e)}();exports.QuestionsManagerEditOptionSingleMulti=QuestionsManagerEditOptionSingleMulti;var QuestionsManagerAddModal=function(){function QuestionsManagerAddModal(e,t,s,i,n){this.language=e,this.model=t,this.toast=s,this.backend=i,this.view=n,this.questionset={},this.questionid="",this.response=null,this.responseSubject=null,this.isLoading=!1,this.responseSubject=new rxjs_1.Subject,this.response=this.responseSubject.asObservable()}return QuestionsManagerAddModal.prototype.ngOnInit=function(){var t=this;this.questiontypes_dom=this.language.getDisplayOptions("questionstypes_dom"),this.model.module="Questions",this.questionid?(this.isLoading=!0,this.model.id=this.questionid,this.model.getData(!0).subscribe(function(e){t.questiontype=t.model.getField("questiontype"),t.isLoading=!1})):(this.model.initializeModel(),this.model.setField("questionset_id",this.questionset.id),this.model.setField("id",this.model.id),this.model.setField("questiontype",this.questiontype))},QuestionsManagerAddModal.prototype.cancelModal=function(){this.responseSubject.next(!1),this.responseSubject.complete(),this.self.destroy()},QuestionsManagerAddModal.prototype.onModalEscX=function(){this.cancelModal()},QuestionsManagerAddModal.prototype.saveQuestion=function(){var t=this,e=!1;if("multi"===this.questionset.data.questiontype&&this.refQuestionsManagerEditMulti.doBeforeSavingQuestion(),("single"===this.questionset.data.questiontype||"multi"===this.questionset.data.questiontype)&&this.model.data.questionoptions&&this.model.data.questionoptions.beans)for(var s in this.model.data.questionoptions.beans)if(""===this.model.data.questionoptions.beans[s].name&&1!=this.model.data.questionoptions.beans[s].deleted){e=!0;break}e?this.toast.sendToast("You have empty rows. Complete or delete them before saving!","error","",!0):this.model.data.name&&this.model.save().subscribe(function(e){t.responseSubject.next(t.model.data),t.responseSubject.complete(),t.self.destroy()})},Object.defineProperty(QuestionsManagerAddModal.prototype,"savingAllowed",{get:function(){return!!this.model.getField("name")},enumerable:!1,configurable:!0}),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionsManagerAddModal.prototype,"questionset",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionsManagerAddModal.prototype,"questionid",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionsManagerAddModal.prototype,"categorypool",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],QuestionsManagerAddModal.prototype,"questiontype",void 0),__decorate([core_1.ViewChild(QuestionsManagerEditMulti,{static:!1}),__metadata("design:type",Object)],QuestionsManagerAddModal.prototype,"refQuestionsManagerEditMulti",void 0),__decorate([core_1.Component({selector:"questions-manager-addmodal",template:'<section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large"><div class="slds-modal__container"><header class="slds-modal__header slds-theme_shade"><button class="slds-button slds-button_icon slds-modal__close slds-button--icon-inverse" title="{{language.getLabel(\'xLBL_CLOSE\')}}" (click)="cancelModal()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 *ngIf="!questionid" class="slds-text-heading_medium slds-hyphenate"><system-label label="LBL_ADD_QUESTION"></system-label></h2><h2 *ngIf="questionid" class="slds-text-heading_medium slds-hyphenate"><system-label label="LBL_EDIT_QUESTION"></system-label></h2></header><div class="slds-modal__content slds-p-around_medium"><system-spinner *ngIf="isLoading"></system-spinner><div *ngIf="!isLoading" [ngSwitch]="questiontype"><questions-manager-edit-rating *ngSwitchCase="\'rating\'" [categorypool]="categorypool"></questions-manager-edit-rating><questions-manager-edit-rating-group *ngSwitchCase="\'ratinggroup\'" [questionset]="questionset" [categorypool]="categorypool"></questions-manager-edit-rating-group><questions-manager-edit-binary *ngSwitchCase="\'binary\'" [categorypool]="categorypool"></questions-manager-edit-binary><questions-manager-edit-single *ngSwitchCase="\'single\'" [categorypool]="categorypool"></questions-manager-edit-single><questions-manager-edit-multi *ngSwitchCase="\'multi\'" [categorypool]="categorypool"></questions-manager-edit-multi><questions-manager-edit-text *ngSwitchCase="\'text\'" [categorypool]="categorypool"></questions-manager-edit-text><questions-manager-edit-ist *ngSwitchCase="\'ist\'" [categorypool]="categorypool"></questions-manager-edit-ist><questions-manager-edit-nps *ngSwitchCase="\'nps\'" [categorypool]="categorypool"></questions-manager-edit-nps><div *ngSwitchDefault><system-label label="MSG_NO_QUESTIONTYPE_NO_QUESTION"></system-label></div></div></div><footer class="slds-modal__footer slds-grid slds-grid_align-spread slds-grid_vertical-align-center"><div><ng-container *ngIf="!isLoading"><system-label label="LBL_QUESTIONTYPE" style="display:inline-block"></system-label>: {{questiontypes_dom[questiontype]}}</ng-container></div><div><button class="slds-button slds-button--neutral" (click)="cancelModal()"><system-label label="LBL_CANCEL"></system-label></button> <button class="slds-button slds-button--brand" (click)="saveQuestion()" [disabled]="!savingAllowed"><system-label label="LBL_SAVE"></system-label></button></div></footer></div></section>',providers:[services_1.model,services_1.view]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.toast,services_1.backend,services_1.view])],QuestionsManagerAddModal)}();exports.QuestionsManagerAddModal=QuestionsManagerAddModal;var QuestionnairePreviewButton=function(){function QuestionnairePreviewButton(e,t,s){this.language=e,this.model=t,this.modalservice=s}return QuestionnairePreviewButton.prototype.execute=function(){var t=this;this.modalservice.openModal("QuestionnairePreview").subscribe(function(e){return e.instance.questionnaireId=t.model.id})},__decorate([core_1.Component({selector:"questionnaire-preview-button",template:'<span><system-label label="LBL_PREVIEW"></system-label></span>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.modal])],QuestionnairePreviewButton)}();exports.QuestionnairePreviewButton=QuestionnairePreviewButton;var QuestionnairePreview=function(){function QuestionnairePreview(e,t){this.language=e,this.backend=t,this.isLoaded=!1,this.self=null}return QuestionnairePreview.prototype.closePopup=function(){this.self.destroy()},__decorate([core_1.Input(),__metadata("design:type",String)],QuestionnairePreview.prototype,"questionnaireId",void 0),__decorate([core_1.Component({selector:"questionnaire-preview",template:'<system-modal size="large"><system-modal-header (close)="closePopup()"><h2 class="slds-text-heading--medium"><ng-container *ngIf="isLoaded">{{questionnaireParticipation.questionnaire.name}}</ng-container></h2></system-modal-header><system-modal-content><questionnaire-render *ngIf="questionnaireId" [questionnaireId]="questionnaireId" (isLoaded$)="isLoaded=$event" editMode="preview" [showQuestionnaireTitle]="false" (questionnaireParticipation$)="questionnaireParticipation=$event"></questionnaire-render></system-modal-content><system-modal-footer><button class="slds-button slds-button--neutral" (click)="closePopup()"><system-label label="LBL_CLOSE"></system-label></button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.language,services_1.backend])],QuestionnairePreview)}();exports.QuestionnairePreview=QuestionnairePreview;var QuestionnaireRender=function(){function e(e){var t=this;this.questionnaireParticipation=e,this.editMode="questionnaire",this.showQuestionnaireTitle=!0,this.showQuestionnaireTextBefore=!0,this.showQuestionnaireTextAfter=!0,this.inModal=!0,this.isDirty$=new rxjs_1.BehaviorSubject(!1),this.isSaving$=new rxjs_1.BehaviorSubject(!1),this.isLoaded$=new rxjs_1.BehaviorSubject(!1),this.questionnaireParticipation$=new core_1.EventEmitter,this.subscriptions=new rxjs_1.Subscription,this.answersChanged$=new core_1.EventEmitter,this.qp=e,this.qp.answersChanged$.subscribe(function(){return t.answersChanged$.emit()})}return e.prototype.ngOnInit=function(){var t=this;this.qp.editMode=this.editMode,this.qp.inModal=this.inModal,this.participationId?this.qp.init_byParticipation(this.participationId):this.parentId&&this.parentType?this.qp.init_byParent(this.parentId,this.parentType):this.questionnaireId&&this.qp.init_byQuestionnaire(this.questionnaireId),this.questionnaireParticipation$.next(this.qp),this.subscriptions.add(this.qp.isLoaded$.subscribe(function(e){return t.isLoaded$.next(e)})),this.subscriptions.add(this.qp.isSaving$.subscribe(function(e){return t.isSaving$.next(e)})),this.subscriptions.add(this.qp.isDirty$.subscribe(function(e){return t.isDirty$.next(e)}))},e.prototype.reload=function(){this.qp&&this.qp.reload()},e.prototype.save=function(){this.qp&&this.qp.save()},e.prototype.ngOnDestroy=function(){this.subscriptions.unsubscribe()},e.prototype.ngOnChanges=function(){this.qp.editMode=this.editMode},__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"questionnaireId",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"parentId",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"parentType",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"participationId",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"editMode",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"showQuestionnaireTitle",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"showQuestionnaireTextBefore",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"showQuestionnaireTextAfter",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"inModal",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"isDirty$",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"isSaving$",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"isLoaded$",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"questionnaireParticipation$",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"answersChanged$",void 0),__decorate([core_1.Component({selector:"questionnaire-render",template:'<system-spinner *ngIf="!qp.isLoaded" class="slds-m-vertical--large" style="display:block"></system-spinner><div *ngIf="qp.isLoaded"><div *ngIf="showQuestionnaireTitle" class="slds-text-heading--medium slds-m-bottom--x-small">{{qp.questionnaire.name}}</div><div *ngIf="showQuestionnaireTextBefore && qp.questionnaire.textbefore" [innerHTML]="qp.questionnaire.textbefore" class="slds-m-bottom--medium questionnaire-some-words"></div><div *ngIf="qp.questionsetsArray.length; else noQuestionsetsTemplate"><div *ngFor="let questionset of qp.questionsetsArray; last as isLast"><div class="slds-box" [ngClass]="{\'slds-m-bottom_medium\': !isLast}" style="border-width:3px"><questionset-render [questionsetId]="questionset.id"></questionset-render></div></div></div><ng-template #noQuestionsetsTemplate><p><system-label label="LBL_NO_QUESTIONSETS_TO_DISPLAY"></system-label></p></ng-template><div *ngIf="showQuestionnaireTextAfter && qp.questionnaire.textafter" [innerHTML]="qp.questionnaire.textafter" class="slds-m-top--medium questionnaire-some-words"></div></div>',styles:["::ng-deep .questionnaire-some-words p { margin: 0.5rem 0; }","::ng-deep .questionnaire-some-words p:first-child { margin-top: 0; }","::ng-deep .questionnaire-some-words p:last-child { margin-bottom: 0; }"],providers:[questionnaireParticipationService]}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}();exports.QuestionnaireRender=QuestionnaireRender;var QuestionsetPreviewButton=function(){function QuestionsetPreviewButton(e,t,s){this.language=e,this.model=t,this.modalservice=s}return QuestionsetPreviewButton.prototype.execute=function(){var t=this;this.modalservice.openModal("QuestionsetPreview").subscribe(function(e){return e.instance.questionsetIdOrObject=t.model.id})},__decorate([core_1.Component({selector:"questionset-preview-button",template:'<span (click)="preview()"><system-label label="LBL_PREVIEW"></system-label></span>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.modal])],QuestionsetPreviewButton)}();exports.QuestionsetPreviewButton=QuestionsetPreviewButton;var QuestionsetPreview=function(){function QuestionsetPreview(e,t){this.language=e,this.questionnaireParticipation=t,this.self=null,this.qp=t}return QuestionsetPreview.prototype.closePopup=function(){this.self.destroy()},__decorate([core_1.Component({selector:"questionset-preview",template:'<div role="dialog" class="slds-modal slds-fade-in-open slds-modal_large"><div class="slds-modal__container"><header *ngIf="qp.isLoaded" class="slds-modal__header slds-theme_shade"><button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{{language.getLabel(\'LBL_CLOSE\')}}" (click)="closePopup()"><system-button-icon [size]="\'large\'" [icon]="\'close\'"></system-button-icon></button><h2 class="slds-text-heading--medium"><system-label label="LBL_QUESTIONSET_PREVIEW"></system-label></h2></header><div class="slds-modal__content slds-p-around--medium" style="height:100%"><questionset-render *ngIf="qp.isLoaded"></questionset-render></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closePopup()"><system-label label="LBL_CLOSE"></system-label></button></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,questionnaireParticipationService])],QuestionsetPreview)}();exports.QuestionsetPreview=QuestionsetPreview;var QuestionsetRender=function(){function QuestionsetRender(e,t){this.language=e,this.questionnaireParticipation=t,this._=_,this.textIsCollapsable=!1,this.textIsCollapsed=!1,this.isCompleteChange=new core_1.EventEmitter,this.qp=t}return QuestionsetRender.prototype.ngOnInit=function(){var e=this;this.questionset=this.questionnaireParticipation.questionnaire.questionsets[this.questionsetId],window.setTimeout(function(){e.box&&64<e.box.nativeElement.clientHeight&&(e.textIsCollapsable=!0)},1)},QuestionsetRender.prototype.toggleText=function(){this.textIsCollapsed=!this.textIsCollapsed},Object.defineProperty(QuestionsetRender.prototype,"percentOfFinishedQuestions",{get:function(){return this.questionnaireParticipation.percentOfFinishedQuestionsInQuestionset[this.questionsetId]},enumerable:!1,configurable:!0}),Object.defineProperty(QuestionsetRender.prototype,"allQuestionsFinished",{get:function(){return this.questionnaireParticipation.allQuestionsOfQuestionsetFinished[this.questionsetId]},enumerable:!1,configurable:!0}),__decorate([core_1.Input(),__metadata("design:type",String)],QuestionsetRender.prototype,"questionsetId",void 0),__decorate([core_1.ViewChild("box",{read:core_1.ElementRef,static:!1}),__metadata("design:type",core_1.ElementRef)],QuestionsetRender.prototype,"box",void 0),__decorate([core_1.Component({selector:"questionset-render",template:'<system-spinner *ngIf="!qp.isLoaded"></system-spinner><ng-container *ngIf="qp.isLoaded"><div class="questionset-render slds-text-heading_small" [ngClass]="{\'in-modal\':qp.inModal}"><div class="questionset-render-header"><div class="slds-grid slds-grid_vertical-align-center"><h3 class="slds-size_3-of-5 slds-text-heading_medium">{{questionset.name}}</h3><div class="slds-size_2-of-5" *ngIf="!qp.editMode === \'preview\' && !_.isEmpty(questionset.questions)"><div class="slds-grid slds-grid_vertical-align-center"><div *ngIf="qp.timerText" class="slds-box_border slds-m-left_medium" [class.slds-theme_warning]="qp.timerWarning"><span class="slds-p-left_xx-small slds-p-right_xx-small">{{qp.timerText}}</span></div><div *ngIf="qp.inModal" class="slds-col slds-m-left_medium"><div class="slds-progress-bar slds-progress-bar_large slds-progress-bar_circular" style="height:1rem"><span class="slds-progress-bar__value" [style.width]="percentOfFinishedQuestions+\'%\'"><span class="slds-assistive-text">Progress: {{percentOfFinishedQuestions}}%</span></span></div></div></div></div></div><div *ngIf="questionset.textbefore" class="questionset-render-textbefore"><ng-container *ngIf="qp.inModal"><div #box class="slds-m-top_medium slds-box slds-theme_shade slds-is-relative" [class.slds-p-bottom_none]="textIsCollapsed" [class.collapsed]="textIsCollapsed"><div class="questionset-render-text"><div class="html-text"><div [innerHTML]="questionset.textbefore"></div></div></div><div *ngIf="textIsCollapsable && textIsCollapsed" class="questionset-render-textbefore-fadeout"><div class="slds-m-bottom_medium slds-m-right_medium slds-text-align_right" style="position:absolute;bottom:0;left:0;right:0"><button class="slds-button slds-button_neutral slds-text-body_regular" (click)="toggleText()"><system-button-icon [icon]="\'chevrondown\'" [position]="\'left\'"></system-button-icon>{{language.getLabel(\'LBL_MORE\')}}</button></div></div></div><div *ngIf="textIsCollapsable && !textIsCollapsed" class="slds-text-align_right" style="margin-top:-0.75rem;margin-right:0.5rem"><button class="slds-button slds-button_neutral slds-text-body_regular" (click)="toggleText()"><system-button-icon [icon]="\'chevronup\'" [position]="\'left\'"></system-button-icon>{{language.getLabel(\'LBL_LESS\')}}</button></div></ng-container><div *ngIf="!qp.inModal" [innerHTML]="questionset.textbefore" class="slds-m-vertical_medium"></div></div></div><div class="questionset-render-questions slds-m-top_medium" [ngClass]="{\'slds-p-right_medium\':qp.inModal}"><div *ngIf="!_.isEmpty(questionset.questions); else noQuestionsTemplate"><p *ngIf="qp.hideFinishedQuestions && allQuestionsFinished" class="slds-text-align_center">Alle Fragen sind beantwortet â und ausgeblendet.</p><ng-container *ngIf="questionset.questiontype === \'ratinggroup\'"><questionset-render-rating [questionsetId]="questionset.id"></questionset-render-rating></ng-container><ng-container *ngIf="questionset.questiontype !== \'ratinggroup\'"><ng-container *ngFor="let question of qp.questionsArray[questionsetId];let i = index;last as isLast"><div [ngClass]="{\'slds-m-bottom_medium\': !isLast}"><ng-container [ngSwitch]="question.questiontype"><div *ngSwitchCase="\'rating\'"><question-render-rating [questionId]="question.id"></question-render-rating></div><div *ngSwitchCase="\'text\'"><question-render-text [questionId]="question.id" [previousQuestion]="i === 0 ? null:qp.questionsArray[questionsetId][i-1]" [followingQuestion]="i+1 >= qp.questionsArray[questionsetId].length ? null:qp.questionsArray[questionsetId][i+1]"></question-render-text></div><div *ngSwitchCase="\'ist\'"><question-render-ist [questionId]="question.id" [previousQuestion]="i === 0 ? null:qp.questionsArray[questionsetId][i-1]" [followingQuestion]="i+1 >= qp.questionsArray[questionsetId].length ? null:qp.questionsArray[questionsetId][i+1]"></question-render-ist></div><div *ngSwitchCase="\'nps\'"><question-render-nps [questionId]="question.id"></question-render-nps></div></ng-container><question-render-binary-single-multi *ngIf="question.questiontype === \'binary\' || question.questiontype === \'single\' || question.questiontype === \'multi\'" [questionId]="question.id" [previousQuestion]="i === 0 ? null:qp.questionsArray[questionsetId][i-1]" [followingQuestion]="i+1 >= qp.questionsArray[questionsetId].length ? null:qp.questionsArray[questionsetId][i+1]"></question-render-binary-single-multi></div></ng-container></ng-container></div><ng-template #noQuestionsTemplate><p><system-label label="LBL_NO_QUESTIONS_TO_DISPLAY"></system-label></p></ng-template></div><div class="questionset-render-header"><div *ngIf="questionset.textafter" [innerHTML]="questionset.textafter" class="slds-m-top_medium html-text"></div></div></div></ng-container>',styles:[".questionset-render.in-modal .questionset-render-header, .questionset-render.in-modal .questionset-render-footer { flex-grow: 0; flex-shrink: 0; }",".questionset-render.in-modal .questionset-render-questions { flex-shrink: 1; flex-grow: 1; overflow-y: scroll; }",".questionset-render.in-modal { display: flex; flex-direction: column; height: 100%; justify-content: space-between; }",".collapsed div.questionset-render-text { max-height: 4rem; overflow: hidden; }",".questionset-render-textbefore-fadeout { display: none; background: linear-gradient(to bottom, rgba(243,242,242,0) 0%, rgba(243,242,242,1) 100%); height: 5rem; position: absolute; bottom: 0; left: 0; right: 0; padding: 0 1rem 1rem 1rem; border-radius: 0.25rem; }",".collapsed div.questionset-render-textbefore-fadeout { display: block; }"],providers:[services_1.helper]}),__metadata("design:paramtypes",[services_1.language,questionnaireParticipationService])],QuestionsetRender)}();exports.QuestionsetRender=QuestionsetRender;var QuestionsetRenderBasic=function(){function e(e){this.questionnaireParticipation=e,this.qp=e}return e.prototype.ngOnInit=function(){this.questionset=this.qp.questionnaire.questionsets[this.questionsetId],this.questionsMeta=this.qp.questionsMeta,this.questiontypeparameter=this.questionset.questiontypeparameter},Object.defineProperty(e.prototype,"allQuestionsOfQuestionsetFinished",{get:function(){return this.qp.allQuestionsOfQuestionsetFinished[this.questionsetId]},enumerable:!1,configurable:!0}),e.prototype.isDisabled=function(e){return!1},__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"questionsetId",void 0),__decorate([core_1.Component({selector:"questionset-render-basic",template:""}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}(),QuestionsetRenderRating=function(s){function e(e){var t=s.call(this,e)||this;return t.questionnaireParticipation=e,t.ratingValuesHaveAlsoText=!1,t}return __extends(e,s),e.prototype.ngOnInit=function(){s.prototype.ngOnInit.call(this);for(var e=0,t=this.questiontypeparameter.rating.entries;e<t.length;e++)if(""!==t[e].text){this.ratingValuesHaveAlsoText=!0;break}},e.prototype.onClick=function(e,t){return this.qp.clickAnswerOption(e,t)},e.prototype.isChecked=function(e,t){return this.qp.answers&&this.qp.answers[e]&&this.qp.answers[e].options&&this.qp.answers[e].options[t]},__decorate([core_1.Component({selector:"questionset-render-rating",template:'<ng-container *ngIf="qp.isLoaded"><table *ngIf="!qp.hideFinishedQuestions || !allQuestionsOfQuestionsetFinished" class="slds-table slds-table_bordered slds-table_col-bordered slds-no-row-hover slds-border_left slds-border_right slds-border_top"><thead><tr class="slds-text-title_caps"><th style="background-color:inherit;width:100%"></th><th *ngFor="let entry of questionset.questiontypeparameter.rating.entries" class="slds-text-align_center"><div *ngIf="ratingValuesHaveAlsoText" class="slds-border_bottom slds-p-bottom_xx-small slds-m-bottom_xx-small"><ng-container *ngIf="entry.text !== \'\'; else nbsp">{{entry.text}}</ng-container><ng-template #nbsp>&nbsp;</ng-template></div>{{entry.value}}</th></tr></thead><tbody><ng-container *ngFor="let question of qp.questionsArray[questionsetId]; let i=index"><tr *ngIf="!qp.hideFinishedQuestions || !questionsMeta[question.id].finished"><td><ng-container *ngIf="question.image_id"><media-file-image [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="qp.imageWidthQuestion"></media-file-image></ng-container><div *ngIf="!question.image_id || questionset.showonlyimages !== \'1\'" class="slds-truncate" style="white-space: normal">{{question.questiontext}}</div></td><td class="slds-text-align_center question-hover" (click)="onClick(option.id,$event)" *ngFor="let option of qp.questionoptionsArray[question.id]; let j = index;"><input type="radio" [checked]="isChecked(question.id,option.id)" name="{{question.id}}" (click)="onClick(option.id,$event)" [disabled]="isDisabled(question.id)"></td></tr></ng-container></tbody></table></ng-container>',styles:["table { border-top: none; }","th { position: sticky; top: 0; border-top: 1px solid #dddbda; border-bottom: 1px solid #dddbda; z-index: 10;}","tr:first-child td { border-top: none; }","td { padding: 0.5rem 0.75rem; }","td.question-hover:hover { background-color: #f3f2f2; }"]}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}(exports.QuestionsetRenderBasic=QuestionsetRenderBasic);exports.QuestionsetRenderRating=QuestionsetRenderRating;var QuestionnaireCategoryPool=function(){function QuestionnaireCategoryPool(e,t,s,i,n){this.language=e,this.model=t,this.view=s,this.backend=i,this.renderer=n,this.listIsExpanded=!1,this.sectionIsOpen=!0,this.hasFocus=!1,this.allCategories=[],this.allCategoryNamesUpper=[],this.selectedCategories=[],this.presentedCategories=[],this.numPresentedCategories=0}return Object.defineProperty(QuestionnaireCategoryPool.prototype,"editing",{get:function(){return this.view.isEditMode()},enumerable:!1,configurable:!0}),QuestionnaireCategoryPool.prototype.ngOnInit=function(){var n=this;this.backend.getRequest("QuestionOptionCategories/getList").subscribe(function(e){n.allCategories=e;for(var t=0,s=n.allCategories;t<s.length;t++){var i=s[t];n.allCategoryNamesUpper.push(i.name.toUpperCase()+" ["+i.abbreviation.toUpperCase()+"]")}})},Object.defineProperty(QuestionnaireCategoryPool.prototype,"selectedCategories2",{get:function(){var o,a=this;return this.selectedCategories=[],this.model.data.categorypool&&""!=this.model.data.categorypool&&(o=this.model.data.categorypool.split(","),this.allCategories.forEach(function(e,t){for(var s=0,i=o;s<i.length;s++){var n=i[s];a.allCategories[t].id===n&&a.selectedCategories.push(a.allCategories[t])}})),this.selectedCategories},enumerable:!1,configurable:!0}),QuestionnaireCategoryPool.prototype.deselectCategory=function(e){this.selectedCategories.splice(e,1),this.model.data.categorypool=this.makeCategoryString()},QuestionnaireCategoryPool.prototype.selectCategory=function(e){-1===this.selectedCategories.indexOf(this.allCategories[e])&&(this.selectedCategories.push(this.allCategories[e]),this.model.data.categorypool=this.makeCategoryString(),this.selectedCategories.sort(function(e,t){e=e.name.toLocaleLowerCase(),t=t.name.toLocaleLowerCase();return t<e?1:e===t?0:-1}),!0===this.presentedCategories[e]&&(this.numPresentedCategories--,this.presentedCategories[e]=!1))},QuestionnaireCategoryPool.prototype.makeCategoryString=function(){var t="";return this.selectedCategories.some(function(e){return t+=(""!=t?",":"")+e.id,!1}),t},QuestionnaireCategoryPool.prototype.openList=function(){var t=this;this.listIsExpanded=!0,this.clickListener=this.renderer.listen("document","click",function(e){return t.onClick(e)})},QuestionnaireCategoryPool.prototype.closeList=function(){this.listIsExpanded=!1,this.clickListener&&this.clickListener()},QuestionnaireCategoryPool.prototype.onClick=function(e){this.inputField.element.nativeElement.contains(e.target)||(this.listIsExpanded=!1,this.clickListener())},QuestionnaireCategoryPool.prototype.ngOnDestroy=function(){this.clickListener&&this.clickListener()},QuestionnaireCategoryPool.prototype.change=function(e){var s=this,i=(e=void 0===e?null:e).target;if(38===e.keyCode||40===e.keyCode||13===e.keyCode)i.blur();else{for(var t=0;t<this.allCategories.length;t++)this.presentedCategories[t]=!1;this.numPresentedCategories=0,this.allCategoryNamesUpper.some(function(e,t){return""!=i.value&&-1<e.indexOf(i.value.toUpperCase())&&!1===s.presentedCategories[t]&&-1===s.selectedCategories.indexOf(s.allCategories[t])&&(s.numPresentedCategories++,s.presentedCategories[t]=!0),!1})}!this.listIsExpanded&&this.numPresentedCategories&&this.openList(),this.listIsExpanded&&0===this.numPresentedCategories&&this.closeList()},QuestionnaireCategoryPool.prototype.changeFocus=function(e,t){void 0===t&&(t=null),e&&this.change(t),this.hasFocus=e},QuestionnaireCategoryPool.prototype.setEditMode=function(){this.model.startEdit(),this.view.setEditMode()},QuestionnaireCategoryPool.prototype.toggleSection=function(){this.sectionIsOpen=!this.sectionIsOpen},QuestionnaireCategoryPool.prototype.getSectionStyle=function(){if(!this.sectionIsOpen)return{height:"0px",transform:"rotateX(90deg)"}},__decorate([core_1.ViewChild("inputField",{read:core_1.ViewContainerRef,static:!1}),__metadata("design:type",core_1.ViewContainerRef)],QuestionnaireCategoryPool.prototype,"inputField",void 0),__decorate([core_1.Component({selector:"questionnaire-category-pool",template:'<div class="slds-section" [ngClass]="{\'slds-is-open\':sectionIsOpen}"><h3 class="slds-section__title"><button class="slds-button slds-section__title-action" (click)="toggleSection()"><system-utility-icon [icon]="\'switch\'" [size]="\'x-small\'" [addclasses]="\'slds-section__title-action-icon slds-button__icon slds-button__icon_left\'"></system-utility-icon><span class="slds-truncate"><system-label label="LBL_CATEGORYPOOL"></system-label></span></button></h3><div [ngStyle]="getSectionStyle()" class="slds-p-around--x-small"><div *ngIf="editing"><div class="slds-form-element"><label class="slds-form-element__label" for="input-categorypool"><system-label label="LBL_SEARCH"></system-label></label><div class="slds-form-element__control"><div class="slds-combobox_container slds-has-object-switcher" [class.slds-has-input-focus]="hasFocus==true"><div *ngIf="presentedCategories" #inputField class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click" [ngClass]="{\'slds-is-open\':listIsExpanded}"><div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right"><input type="text" class="slds-input slds-combobox__input" id="input-categorypool" autocomplete="off" (keyup)="change($event)" (blur)="changeFocus(false)" (focus)="changeFocus(true,$event)"> <span class="slds-icon_container slds-icon-utility-search slds-input__icon slds-input__icon_right"><system-utility-icon icon="search" size="x-small"></system-utility-icon><span class="slds-assistive-text"><system-label label="LBL_SEARCH"></system-label></span></span></div><div *ngIf="numPresentedCategories && listIsExpanded"><ul class="slds-listbox slds-listbox_vertical slds-dropdown slds-dropdown_fluid"><ng-template ngFor let-el [ngForOf]="presentedCategories" let-i="index"><li *ngIf="el === true" class="slds-listbox__item" (click)="selectCategory(i)"><span class="slds-media slds-listbox__option slds-listbox__option_entity slds-listbox__option_has-meta"><span class="slds-media__body"><span class="slds-listbox__option-text slds-listbox__option-text_entity">{{allCategories[i].name}} [{{allCategories[i].abbreviation}}]</span></span></span></li></ng-template></ul></div></div></div></div></div></div><button *ngIf="!editing" class="slds-button slds-button--icon slds-m-top--medium" style="float:right" (click)="setEditMode()"><system-button-icon [icon]="\'edit\'"></system-button-icon></button><ng-container *ngIf="selectedCategories2.length;else noCategories"><ul class="slds-listbox slds-listbox_inline slds-m-top--xx-small"><li *ngFor="let category of selectedCategories2; let i = index;" class="slds-listbox__item"><span class="slds-pill"><span class="slds-pill__label">{{category.name}}</span> <button *ngIf="editing" class="slds-button slds-button--icon slds-pill__remove" title="{{language.getLabel(\'LBL_REMOVE\')}}" (click)="deselectCategory(i)"><system-button-icon [icon]="\'close\'"></system-button-icon></button></span></li></ul></ng-container><ng-template #noCategories><p *ngIf="!editing">Keine Kategorien definiert.</p></ng-template></div></div>',styles:[".slds-pill { padding: 0.25rem 0.5rem }",".slds-pill:hover { background-color: inherit; }"]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view,services_1.backend,core_1.Renderer2])],QuestionnaireCategoryPool)}();exports.QuestionnaireCategoryPool=QuestionnaireCategoryPool;var QuestionsManagerEditCategories=function(){function e(e,t,s){this.language=e,this.renderer=t,this.elementRef=s,this.change=new core_1.EventEmitter,this.showLabel=!1,this.selectedCategories=[],this.listIsExpanded=!1,this.names="",this.compId=_.uniqueId()}return e.prototype.ngOnChanges=function(){var e=this;this.categorypool.loaded?this.doSelectedCategories():this.categorypool.event.subscribe(function(){e.doSelectedCategories()})},e.prototype.doSelectedCategories=function(){for(var e=this.selectedCategories.length=0,t=this.categorypool.list;e<t.length;e++)for(var s=t[e],i=0,n=this.option.categories.split(",");i<n.length;i++){var o=n[i];s.id===o&&this.selectedCategories.push(s)}this.names=this.makeNameString()},e.prototype.toggleList=function(){this.listIsExpanded?this.closeList():this.openList()},e.prototype.closeList=function(){this.listIsExpanded=!1,this.clickListener&&this.clickListener()},e.prototype.openList=function(){var t=this;this.listIsExpanded=!0,this.clickListener=this.renderer.listen("document","click",function(e){return t.onClick(e)})},e.prototype.onClick=function(e){this.elementRef.nativeElement.contains(e.target)||(this.listIsExpanded=!1,this.clickListener())},e.prototype.ngOnDestroy=function(){this.clickListener&&this.clickListener()},e.prototype.toggleCategory=function(e){this.hasCategory(e)?this.removeCategory(this.categorypool.list[e].id):this.addCategory(e)},e.prototype.addCategory=function(e){this.selectedCategories.push(this.categorypool.list[e]),this.selectedCategories.sort(function(e,t){e=e.name.toLocaleLowerCase(),t=t.name.toLocaleLowerCase();return t<e?1:e===t?0:-1}),this.option.categories=this.makeIdString(),this.change.emit(),this.names=this.makeNameString()},e.prototype.removeCategory=function(s){var i=this;this.selectedCategories.some(function(e,t){return s===e.id&&(i.selectedCategories.splice(t,1),!0)}),this.option.categories=this.makeIdString(),this.change.emit(),this.names=this.makeNameString()},e.prototype.hasCategory=function(e){return-1!==this.selectedCategories.indexOf(this.categorypool.list[e])},e.prototype.makeIdString=function(){var t="";return this.selectedCategories.some(function(e){return t+=(""!=t?",":"")+e.id,!1}),t},e.prototype.makeNameString=function(){var t="";return this.selectedCategories.some(function(e){return t+=(""!=t?", ":"")+e.name,!1}),t},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"categorypool",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"option",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"change",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"showLabel",void 0),__decorate([core_1.Component({selector:"questions-manager-edit-categories",template:'<div class="slds-form-element"><label *ngIf="showLabel" class="slds-form-element__label" for="questionsmanagereditcategories"><system-label [label]="\'LBL_CATEGORIES\'"></system-label></label><div class="slds-form-element__control"><div class="slds-combobox_container"><div class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click slds-combobox-picklist" role="combobox" [ngClass]="{\'slds-is-open\':listIsExpanded}"><div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right" (click)="toggleList()"><input type="text" class="slds-input slds-combobox__input" autocomplete="off" placeholder="{{names}}" readonly id="{{compId}}-categories"><span class="slds-icon_container slds-icon-utility-down slds-input__icon slds-input__icon_right"><system-utility-icon icon="down" size="x-small"></system-utility-icon><span class="slds-assistive-text">Open</span></span></div><div><ul class="slds-listbox slds-listbox_vertical slds-dropdown slds-dropdown_fluid"><li *ngFor="let category of categorypool.list; let i=index" class="slds-listbox__item" (click)="toggleCategory(i)"><span class="slds-media slds-listbox__option slds-listbox__option_plain slds-media_small slds-media_center" [ngClass]="{\'slds-is-selected\':hasCategory(i)}"><span class="slds-media__figure"><system-utility-icon icon="check" size="x-small" addclasses="slds-listbox__icon-selected"></system-utility-icon></span> <span class="slds-media__body"><span class="slds-truncate">{{category.name}}</span></span></span></li></ul></div></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,core_1.Renderer2,core_1.ElementRef])],e)}();exports.QuestionsManagerEditCategories=QuestionsManagerEditCategories;var QuestionnaireEvaluation=function(){function QuestionnaireEvaluation(e,t,s){this.language=e,this.backend=t,this.metadata=s,this.parentdata={},this.reference_id="",this.reference_type="",this.noAnimation=!1,this.usagePrint=!1,this.sequenceNr=0,this.loading=!0,this.noEvaluationTypeDefined=!1,this.noParticipationYet=!1}return Object.defineProperty(QuestionnaireEvaluation.prototype,"individualHeight",{set:function(e){this.component&&(this.component.instance.individualHeight=e)},enumerable:!1,configurable:!0}),QuestionnaireEvaluation.prototype.ngOnInit=function(){var s=this;this.backend.getRequest("module/QuestionnaireParticipations/byReference/"+this.reference_type+"/"+this.reference_id+"/evaluation").subscribe(function(t){if(!1===t.participated)return s.noParticipationYet=!0,void(s.loading=!1);switch(s.evaluationType=t.evaluationType,s.evaluationType){case"none":s.noEvaluationTypeDefined=!0;break;case"motivatoren":s.metadata.addComponent("QuestionnaireEvaluationMotivatoren",s.destination).subscribe(function(e){e.instance.values=t.values,e.instance.sequenceNr=s.sequenceNr,e.instance.noAnimation=s.noAnimation,e.instance.usagePrint=s.usagePrint,s.component=e});break;case"bar":s.metadata.addComponent("QuestionnaireEvaluationBar",s.destination).subscribe(function(e){e.instance.values=t.values,e.instance.sequenceNr=s.sequenceNr,e.instance.noAnimation=s.noAnimation,e.instance.usagePrint=s.usagePrint,s.component=e});break;case"mbti":s.metadata.addComponent("QuestionnaireEvaluationMbti",s.destination).subscribe(function(e){e.instance.values=t.values,e.instance.sequenceNr=s.sequenceNr,e.instance.noAnimation=s.noAnimation,e.instance.usagePrint=s.usagePrint,s.component=e});break;case"ist":s.metadata.addComponent("QuestionnaireEvaluationIst",s.destination).subscribe(function(e){e.instance.values=t.values,e.instance.sequenceNr=s.sequenceNr,e.instance.noAnimation=s.noAnimation,e.instance.usagePrint=s.usagePrint,s.component=e});break;case"spiderweb":s.metadata.addComponent("QuestionnaireEvaluationSpiderweb",s.destination).subscribe(function(e){e.instance.values=t.values,e.instance.sequenceNr=s.sequenceNr,e.instance.noAnimation=s.noAnimation,e.instance.usagePrint=s.usagePrint,s.component=e});break;case"lmi":s.metadata.addComponent("QuestionnaireEvaluationLmi",s.destination).subscribe(function(e){e.instance.values=t.values,e.instance.sequenceNr=s.sequenceNr,e.instance.noAnimation=s.noAnimation,e.instance.usagePrint=s.usagePrint,s.component=e});break;default:s.metadata.addComponent("QuestionnaireEvaluationDefault",s.destination).subscribe(function(e){e.instance.values=t.values,e.instance.sequenceNr=s.sequenceNr,e.instance.noAnimation=s.noAnimation,e.instance.evaluationType=s.evaluationType,e.instance.usagePrint=s.usagePrint,s.component=e})}s.loading=!1})},__decorate([core_1.ViewChild("destination",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],QuestionnaireEvaluation.prototype,"destination",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionnaireEvaluation.prototype,"parentdata",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionnaireEvaluation.prototype,"reference_id",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionnaireEvaluation.prototype,"reference_type",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionnaireEvaluation.prototype,"noAnimation",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionnaireEvaluation.prototype,"usagePrint",void 0),__decorate([core_1.Input(),__metadata("design:type",Number),__metadata("design:paramtypes",[Number])],QuestionnaireEvaluation.prototype,"individualHeight",null),__decorate([core_1.Component({selector:"questionnaire-evaluation",template:'<div *ngIf="loading" class="slds-p-around--medium"><system-spinner></system-spinner></div><div #destination></div><div *ngIf="noEvaluationTypeDefined" class="slds-align--absolute-center slds-p-around--medium slds-text-heading_small"><i>Kein Auswertungstyp definiert.</i></div><div *ngIf="noParticipationYet" class="slds-align--absolute-center slds-p-around--medium slds-text-heading_small"><i>Noch keine Teilnahme am Testverfahren.</i></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.backend,services_1.metadata])],QuestionnaireEvaluation)}();exports.QuestionnaireEvaluation=QuestionnaireEvaluation;var QuestionnaireEvaluationDefault=function(){function QuestionnaireEvaluationDefault(e,t,s){this.language=e,this.modelutilities=t,this.metadata=s,this.valuesForChart=[],this.chartid="",this.usagePrint=!1,this.defaultHeight=50,this.chartid=this.modelutilities.generateGuid()}return Object.defineProperty(QuestionnaireEvaluationDefault.prototype,"individualHeight",{set:function(e){var t;this.usagePrint&&!isNaN(e)&&0!==(t=Number(e))&&this.chart&&this._individualHeight!==t&&(this._individualHeight=t,this.chart.update({chart:{height:e+"%"}}),this.chart.reflow())},enumerable:!1,configurable:!0}),Object.defineProperty(QuestionnaireEvaluationDefault.prototype,"height",{get:function(){return this._individualHeight||this.defaultHeight},enumerable:!1,configurable:!0}),Object.defineProperty(QuestionnaireEvaluationDefault.prototype,"divid",{get:function(){return"questionnaire-eval-chart"+this.chartid},enumerable:!1,configurable:!0}),QuestionnaireEvaluationDefault.prototype.ngOnInit=function(){for(var e=0;e<this.values.length;e++)this.valuesForChart[e]=[this.values[e].name,this.values[e].points]},Object.defineProperty(QuestionnaireEvaluationDefault.prototype,"chartDivStyles",{get:function(){return this.usagePrint?{"max-width":"650px",margin:"auto"}:null},enumerable:!1,configurable:!0}),QuestionnaireEvaluationDefault.prototype.ngAfterViewInit=function(){var e=this;this.metadata.loadLibs("highcharts").subscribe(function(){e.chart=Highcharts.chart(e.divid,{credits:!1,chart:{type:"column",height:e.usagePrint?e.height+"%":null},title:null,xAxis:{type:"category",labels:{rotation:-90,style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif',whiteSpace:"normal"}}},yAxis:{min:0,title:{text:e.language.getLabel("LBL_POINTS"),style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif'}}},legend:{enabled:!1},tooltip:{enabled:!1},series:[{color:"#002F60",name:"Points",data:e.valuesForChart}],dataLabels:{enabled:!0,rotation:-90,color:"#FFFFFF",align:"right",format:"{point.y:.1f}",y:10,style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif',whiteSpace:"normal"}}})})},__decorate([core_1.Input(),__metadata("design:type",Array)],QuestionnaireEvaluationDefault.prototype,"values",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],QuestionnaireEvaluationDefault.prototype,"evaluationType",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionnaireEvaluationDefault.prototype,"usagePrint",void 0),__decorate([core_1.Input(),__metadata("design:type",Number),__metadata("design:paramtypes",[Number])],QuestionnaireEvaluationDefault.prototype,"individualHeight",null),__decorate([core_1.Component({selector:"questionnaire-evaluation-default",template:'<div class="slds-grid"><div class="slds-col slds-size_1-of-5"><table *ngIf="values.length" class="slds-table slds-table_bordered slds-table_striped"><thead><tr class="slds-text-title_caps"><th scope="col"><div class="slds-truncate"><system-label label="LBL_CATEGORY"></system-label></div></th><th scope="col" class="slds-text-align--right"><div class="slds-truncate"><ng-container *ngIf="evaluationType !== \'lmi\'; else notLMI"><system-label label="LBL_POINTS"></system-label></ng-container><ng-template #notLMI>%</ng-template></div></th></tr></thead><tbody><tr *ngFor="let value of valuesForChart"><td scope="row"><div class="slds-truncate">{{value[0]}}</div></td><td class="slds-text-align--right"><div class="slds-truncate">{{value[1]}}</div></td></tr></tbody></table></div><div class="slds-size_4-of-5"><div class="slds-m-left--small"><div [id]="divid" [ngStyle]="chartDivStyles"></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.modelutilities,services_1.metadata])],QuestionnaireEvaluationDefault)}();exports.QuestionnaireEvaluationDefault=QuestionnaireEvaluationDefault;var QuestionnaireEvaluationBar=function(){function QuestionnaireEvaluationBar(e,t,s){this.language=e,this.modelutilities=t,this.metadata=s,this.valuesForChart=[],this.chartid="",this.usagePrint=!1,this.defaultHeight=70,this.chartid=this.modelutilities.generateGuid()}return Object.defineProperty(QuestionnaireEvaluationBar.prototype,"individualHeight",{set:function(e){var t;this.usagePrint&&!isNaN(e)&&0!==(t=Number(e))&&this.chart&&this._individualHeight!==t&&(this._individualHeight=t,this.chart.update({chart:{height:e+"%"}}),this.chart.reflow())},enumerable:!1,configurable:!0}),Object.defineProperty(QuestionnaireEvaluationBar.prototype,"height",{get:function(){return this._individualHeight||this.defaultHeight},enumerable:!1,configurable:!0}),Object.defineProperty(QuestionnaireEvaluationBar.prototype,"divid",{get:function(){return"questionnaire-eval-chart"+this.chartid},enumerable:!1,configurable:!0}),QuestionnaireEvaluationBar.prototype.ngOnInit=function(){for(var e=0;e<this.values.length;e++)this.valuesForChart[e]=[this.values[e].name,this.values[e].points]},Object.defineProperty(QuestionnaireEvaluationBar.prototype,"chartDivStyles",{get:function(){return this.usagePrint?{"max-width":"650px",margin:"auto"}:null},enumerable:!1,configurable:!0}),QuestionnaireEvaluationBar.prototype.ngAfterViewInit=function(){var e=this;this.metadata.loadLibs("highcharts").subscribe(function(){e.chart=Highcharts.chart(e.divid,{credits:!1,chart:{type:"bar",height:e.usagePrint?e.height+"%":null},title:null,xAxis:{type:"category",labels:{style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif',whiteSpace:"normal"}}},yAxis:{min:0,title:{text:e.language.getLabel("LBL_POINTS"),style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif'}}},legend:{enabled:!1},tooltip:{enabled:!1},series:[{color:"#002F60",name:"Population",data:e.valuesForChart}],dataLabels:{enabled:!0,rotation:-90,color:"#FFFFFF",align:"right",format:"{point.y:.1f}",y:10,style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif',whiteSpace:"normal"}}})})},__decorate([core_1.Input(),__metadata("design:type",Array)],QuestionnaireEvaluationBar.prototype,"values",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],QuestionnaireEvaluationBar.prototype,"usagePrint",void 0),__decorate([core_1.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],QuestionnaireEvaluationBar.prototype,"individualHeight",null),__decorate([core_1.Component({selector:"questionnaire-evaluation-bar",template:'<div class="slds-grid"><div class="slds-col slds-size_1-of-5"><table *ngIf="values.length" class="slds-table slds-table_bordered slds-table_striped"><thead><tr class="slds-text-title_caps"><th scope="col"><div class="slds-truncate"><system-label label="LBL_CATEGORY"></system-label></div></th><th scope="col" class="slds-text-align--right"><div class="slds-truncate"><system-label label="LBL_POINTS"></system-label></div></th></tr></thead><tbody><tr *ngFor="let value of valuesForChart"><td scope="row"><div class="slds-truncate">{{value[0]}}</div></td><td class="slds-text-align--right"><div class="slds-truncate">{{value[1]}}</div></td></tr></tbody></table></div><div class="slds-size_4-of-5"><div class="slds-m-left--small"><div [id]="divid" [ngStyle]="chartDivStyles"></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.modelutilities,services_1.metadata])],QuestionnaireEvaluationBar)}();exports.QuestionnaireEvaluationBar=QuestionnaireEvaluationBar;var QuestionnaireEvaluationSpiderweb=function(){function e(e,t,s){this.language=e,this.modelutilities=t,this.metadata=s,this.valuesForChart=[],this.chartid="",this.usagePrint=!1,this.defaultHeight=70,this.chartid=this.modelutilities.generateGuid()}return Object.defineProperty(e.prototype,"individualHeight",{set:function(e){var t;this.usagePrint&&!isNaN(e)&&0!==(t=Number(e))&&this.chart&&this._individualHeight!==t&&(this._individualHeight=t,this.chart.update({chart:{height:e+"%"}}),this.chart.reflow())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._individualHeight||this.defaultHeight},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"divid",{get:function(){return"questionnaire-eval-chart"+this.chartid},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){for(var e=0;e<this.values.length;e++)this.valuesForChart[e]=[this.values[e].name,this.values[e].points]},Object.defineProperty(e.prototype,"chartDivStyles",{get:function(){return this.usagePrint?{"max-width":"650px",margin:"auto"}:null},enumerable:!1,configurable:!0}),e.prototype.ngAfterViewInit=function(){var e=this;this.metadata.loadLibs("highcharts").subscribe(function(){e.chart=Highcharts.chart(e.divid,{credits:!1,chart:{type:"line",polar:!0,height:e.usagePrint?e.height+"%":null},title:null,xAxis:{type:"category",labels:{style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif',whiteSpace:"normal"}}},yAxis:{min:0,title:{text:e.language.getLabel("LBL_POINTS"),style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif'}}},legend:{enabled:!1},tooltip:{enabled:!1},series:[{color:"#002F60",name:"Population",data:e.valuesForChart}],dataLabels:{enabled:!0,rotation:-90,color:"#FFFFFF",align:"right",format:"{point.y:.1f}",y:10,style:{fontSize:(e.usagePrint,"12px"),fontFamily:'"Libre Franklin", sans-serif',whiteSpace:"normal"}}})})},__decorate([core_1.Input(),__metadata("design:type",Array)],e.prototype,"values",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"usagePrint",void 0),__decorate([core_1.Input(),__metadata("design:type",Number),__metadata("design:paramtypes",[Number])],e.prototype,"individualHeight",null),__decorate([core_1.Component({selector:"questionnaire-evaluation-spiderweb",template:'<div class="slds-grid"><div class="slds-col slds-size_1-of-5"><table *ngIf="values.length" class="slds-table slds-table_bordered slds-table_striped"><thead><tr class="slds-text-title_caps"><th scope="col"><div class="slds-truncate"><system-label label="LBL_CATEGORY"></system-label></div></th><th scope="col" class="slds-text-align--right"><div class="slds-truncate"><system-label label="LBL_POINTS"></system-label></div></th></tr></thead><tbody><tr *ngFor="let value of valuesForChart"><td scope="row"><div class="slds-truncate">{{value[0]}}</div></td><td class="slds-text-align--right"><div class="slds-truncate">{{value[1]}}</div></td></tr></tbody></table></div><div class="slds-size_4-of-5"><div class="slds-m-left--small"><div [id]="divid" [ngStyle]="chartDivStyles"></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.modelutilities,services_1.metadata])],e)}();exports.QuestionnaireEvaluationSpiderweb=QuestionnaireEvaluationSpiderweb;var QuestionnaireInterpretationCategories=function(){function QuestionnaireInterpretationCategories(e,t,s,i,n){this.language=e,this.model=t,this.view=s,this.backend=i,this.renderer=n,this.listIsExpanded=!1,this.sectionIsOpen=!0,this.hasFocus=!1,this.allCategories=[],this.allCategoryNamesUpper=[],this.selectedCategories=[],this.presentedCategories=[],this.numPresentedCategories=0}return Object.defineProperty(QuestionnaireInterpretationCategories.prototype,"editing",{get:function(){return this.view.isEditMode()},enumerable:!1,configurable:!0}),QuestionnaireInterpretationCategories.prototype.ngOnInit=function(){var s=this;this.backend.getRequest("QuestionOptionCategories/getList").subscribe(function(e){s.allCategories=e,s.allCategories.forEach(function(e,t){s.allCategoryNamesUpper[t]=e.name.toUpperCase()+" ["+e.abbreviation.toUpperCase()+"]"})})},Object.defineProperty(QuestionnaireInterpretationCategories.prototype,"selectedCategories2",{get:function(){if(this.selectedCategories=[],this.model.data.categories&&""!=this.model.data.categories)for(var e=this.model.data.categories.split(","),t=0,s=this.allCategories;t<s.length;t++)for(var i=s[t],n=0,o=e;n<o.length;n++){var a=o[n];i.id===a&&this.selectedCategories.push(i)}return this.selectedCategories},enumerable:!1,configurable:!0}),QuestionnaireInterpretationCategories.prototype.deselectCategory=function(e){this.selectedCategories.splice(e,1),this.model.data.categories=this.makeCategoryString()},QuestionnaireInterpretationCategories.prototype.selectCategory=function(e){-1===this.selectedCategories.indexOf(this.allCategories[e])&&(this.selectedCategories.push(this.allCategories[e]),this.model.data.categories=this.makeCategoryString(),this.selectedCategories.sort(function(e,t){e=e.name.toLocaleLowerCase(),t=t.name.toLocaleLowerCase();return t<e?1:e===t?0:-1}),!0===this.presentedCategories[e]&&(this.numPresentedCategories--,this.presentedCategories[e]=!1))},QuestionnaireInterpretationCategories.prototype.makeCategoryString=function(){var t="";return this.selectedCategories.some(function(e){return t+=(""!=t?",":"")+e.id,!1}),t},QuestionnaireInterpretationCategories.prototype.openList=function(){var t=this;this.listIsExpanded=!0,this.clickListener=this.renderer.listen("document","click",function(e){return t.onClick(e)})},QuestionnaireInterpretationCategories.prototype.closeList=function(){this.listIsExpanded=!1,this.clickListener&&this.clickListener()},QuestionnaireInterpretationCategories.prototype.onClick=function(e){this.inputField.element.nativeElement.contains(e.target)||(this.listIsExpanded=!1,this.clickListener())},QuestionnaireInterpretationCategories.prototype.ngOnDestroy=function(){this.clickListener&&this.clickListener.destroy&&this.clickListener.destroy()},QuestionnaireInterpretationCategories.prototype.change=function(e){var s=this,i=(e=void 0===e?null:e).target;if(38===e.keyCode||40===e.keyCode||13===e.keyCode)i.blur();else{for(var t=0;t<this.allCategories.length;t++)this.presentedCategories[t]=!1;this.numPresentedCategories=0,this.allCategoryNamesUpper.some(function(e,t){return""!=i.value&&-1<e.indexOf(i.value.toUpperCase())&&!1===s.presentedCategories[t]&&-1===s.selectedCategories.indexOf(s.allCategories[t])&&(s.numPresentedCategories++,s.presentedCategories[t]=!0),!1})}!this.listIsExpanded&&this.numPresentedCategories&&this.openList(),this.listIsExpanded&&0===this.numPresentedCategories&&this.closeList()},QuestionnaireInterpretationCategories.prototype.changeFocus=function(e,t){void 0===t&&(t=null),e&&this.change(t),this.hasFocus=e},QuestionnaireInterpretationCategories.prototype.setEditMode=function(){this.model.startEdit(),this.view.setEditMode()},QuestionnaireInterpretationCategories.prototype.toggleSection=function(){this.sectionIsOpen=!this.sectionIsOpen},QuestionnaireInterpretationCategories.prototype.getSectionStyle=function(){if(!this.sectionIsOpen)return{height:"0px",transform:"rotateX(90deg)"}},__decorate([core_1.ViewChild("inputField",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],QuestionnaireInterpretationCategories.prototype,"inputField",void 0),__decorate([core_1.Component({selector:"questionnaire-interpretation-categories",template:'<div class="slds-section" [ngClass]="{\'slds-is-open\':sectionIsOpen}"><h3 class="slds-section__title"><button class="slds-button slds-section__title-action" (click)="toggleSection()"><system-utility-icon [icon]="\'switch\'" [size]="\'x-small\'" [addclasses]="\'slds-section__title-action-icon slds-button__icon slds-button__icon_left\'"></system-utility-icon><span class="slds-truncate" title="{{language.getLabel(\'LBL_CATEGORIES\')}}">{{language.getLabel(\'LBL_CATEGORIES\')}}</span></button></h3><div [ngStyle]="getSectionStyle()" class="slds-p-around--x-small"><div *ngIf="editing"><div class="slds-form-element"><label class="slds-form-element__label" for="input-categorypool"><system-label label="LBL_SEARCH"></system-label></label><div class="slds-form-element__control"><div class="slds-combobox_container slds-has-object-switcher" [class.slds-has-input-focus]="hasFocus==true"><div *ngIf="presentedCategories" #inputField class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click" [ngClass]="{\'slds-is-open\':listIsExpanded}"><div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right"><input type="text" class="slds-input slds-combobox__input" id="input-categorypool" autocomplete="off" (keyup)="change($event)" (blur)="changeFocus(false)" (focus)="changeFocus(true,$event)"> <span class="slds-icon_container slds-icon-utility-search slds-input__icon slds-input__icon_right"><system-utility-icon size="x-small" icon="search"></system-utility-icon><span class="slds-assistive-text"><system-label label="LBL_SEARCH"></system-label></span></span></div><div *ngIf="numPresentedCategories && listIsExpanded"><ul class="slds-listbox slds-listbox_vertical slds-dropdown slds-dropdown_fluid"><ng-template ngFor let-el [ngForOf]="presentedCategories" let-i="index"><li *ngIf="el === true" class="slds-listbox__item" (click)="selectCategory(i)"><span class="slds-media slds-listbox__option slds-listbox__option_entity slds-listbox__option_has-meta"><span class="slds-media__body"><span class="slds-listbox__option-text slds-listbox__option-text_entity">{{allCategories[i].name}} [{{allCategories[i].abbreviation}}]</span></span></span></li></ng-template></ul></div></div></div></div></div></div><button *ngIf="!editing" class="slds-button slds-button--icon slds-m-top--medium" style="float:right" (click)="setEditMode()"><system-button-icon [icon]="\'edit\'"></system-button-icon></button><ng-container *ngIf="selectedCategories2.length;else noCategories"><ul class="slds-listbox slds-listbox_inline slds-m-top--xx-small"><li *ngFor="let category of selectedCategories2; let i = index;" class="slds-listbox__item"><span class="slds-pill"><span class="slds-pill__label">{{category.name}}</span> <button *ngIf="editing" class="slds-button slds-button--icon slds-pill__remove" title="{{language.getLabel(\'LBL_REMOVE\')}}" (click)="deselectCategory(i)"><system-button-icon [icon]="\'close\'"></system-button-icon></button></span></li></ul></ng-container><ng-template #noCategories><p *ngIf="!editing">Keine Kategorien definiert.</p></ng-template></div></div>',styles:[".slds-pill { padding: 0.25rem 0.5rem }",".slds-pill:hover { background-color: inherit; }"]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view,services_1.backend,core_1.Renderer2])],QuestionnaireInterpretationCategories)}();exports.QuestionnaireInterpretationCategories=QuestionnaireInterpretationCategories;var QuestionnaireInterpretationAssignment=function(){function QuestionnaireInterpretationAssignment(e,t,s,i,n,o,a){this.conf=e,this.language=t,this.backend=s,this.metadata=i,this.sanitized=n,this.toast=o,this.renderer=a,this.self=null,this.isLoading=!0,this.nrAssignedInterpretationsChanged=0,this.suggestedInterpretations=[],this.meta={},this.assignedInterpretations=[],this.evaluationIsOpen=!0,this.allInterpretations=[],this.offeredInterpretationsAreExpanded=!1,this.someExtraTextIsChanged=!1}return QuestionnaireInterpretationAssignment.prototype.ngOnInit=function(){var s=this;this.backend.getRequest("module/QuestionnaireParticipations/byReference/SUPConsultingOrderItems/"+this.reference_id+"/questionnaireId").subscribe(function(e){s.questionnaireId=e.questionnaireId,s.backend.getRequest("module/Questionnaires/"+s.questionnaireId+"/related/questionnaireinterpretations",{limit:999}).subscribe(function(e){for(var t in e)e.hasOwnProperty(t)&&s.allInterpretations.push(e[t]);s.assignedInterpretations&&(s.isLoading=!1)})}),this.backend.getRequest("module/"+this.reference_module+"/"+this.reference_id+"/related/questionnaireinterpretations",{limit:999}).subscribe(function(e){for(var t in e)e.hasOwnProperty(t)&&s.assign(e[t],!0);s.allInterpretations&&(s.isLoading=!1)})},QuestionnaireInterpretationAssignment.prototype.isAssigned=function(e){return this.meta[e]&&!0===this.meta[e].assigned},QuestionnaireInterpretationAssignment.prototype.assign=function(e,t){void 0===t&&(t=!1),this.meta[e.id]||(this.meta[e.id]={id:e.id,nativelyAssigned:t,object:e}),this.meta[e.id].assigned=!0,void 0===e.text_extra&&(e.text_extra=""),this.meta[e.id].nativelyTextExtra=e.text_extra,this.meta[e.id].editMode=!1,e.htmlSanitized=this.sanitized.bypassSecurityTrustHtml("<html><head><style>"+this.metadata.getHtmlStylesheetCode(e.text_short_stylesheet_id)+'</style></head><body class="spice">'+e.text_short+"</body></html>"),e.textExtraSanitized=this.sanitized.bypassSecurityTrustHtml("<html><head><style>"+this.metadata.getHtmlStylesheetCode(e.text_short_stylesheet_id)+'</style></head><body class="spice">'+e.text_extra+"</body></html>"),this.assignedInterpretations.push(e),!0!==this.meta[e.id].nativelyAssigned||t||this.nrAssignedInterpretationsChanged--,!1===this.meta[e.id].nativelyAssigned&&this.nrAssignedInterpretationsChanged++},QuestionnaireInterpretationAssignment.prototype.addOffered=function(e){this.isAssigned(e.id)||this.assign(e)},Object.defineProperty(QuestionnaireInterpretationAssignment.prototype,"offeredInterpretations",{get:function(){for(var e=[],t=0,s=this.allInterpretations;t<s.length;t++){var i=s[t];this.isAssigned(i.id)||e.push(i)}return e},enumerable:!1,configurable:!0}),QuestionnaireInterpretationAssignment.prototype.complementWithSuggestion=function(){var i=this;this.backend.getRequest("module/QuestionnaireParticipations/byReference/"+this.reference_module+"/"+this.reference_id+"/interpretationsSuggested").subscribe(function(e){var s;i.suggestedInterpretations=e,0===i.suggestedInterpretations.length?i.toast.sendToast("Keine passenden Interpretationen gefunden.","warning","",!0):(s=0,i.suggestedInterpretations.some(function(e,t){return i.isAssigned(e.id)||(i.assign(e),s++),!1}),s?i.toast.sendToast(s+" Interpretationen hinzugefÃ¼gt.","success","",!0):i.toast.sendToast("Alle passenden Interpretationen bereits in der Liste.","info","",!0),i.isLoading=!1)})},QuestionnaireInterpretationAssignment.prototype.removeSingle=function(e){var t=this.assignedInterpretations[e];this.isAssigned(t.id)&&(this.meta[t.id].assigned=!1,t.text_extra=this.meta[t.id].nativelyTextExtra,!0===this.meta[t.id].nativelyAssigned&&this.nrAssignedInterpretationsChanged++,!1===this.meta[t.id].nativelyAssigned&&this.nrAssignedInterpretationsChanged--,this.assignedInterpretations.splice(e,1))},QuestionnaireInterpretationAssignment.prototype.closeModal=function(){var e,t,s,i,n=[],o=[],a=[];for(e in this.meta)this.meta.hasOwnProperty(e)&&(s=(t=this.meta[e]).assigned!==t.nativelyAssigned||t.nativelyTextExtra!==t.object.text_extra,i=t.nativelyTextExtra!==t.object.text_extra,s&&(t.assigned?o:n).push(t.object.id),i&&a.push(t.object.id));if(n.length&&this.backend.deleteRequest("module/"+this.reference_module+"/"+this.reference_id+"/related/questionnaireinterpretations",{relatedids:JSON.stringify(n)}),o.length&&this.backend.postRequest("module/"+this.reference_module+"/"+this.reference_id+"/related/questionnaireinterpretations",[],o),a.length)for(var r=0,l=a;r<l.length;r++){var d=l[r];this.backend.putRequest("module/"+this.reference_module+"/"+this.reference_id+"/related/questionnaireinterpretations",[],{id:d,text_extra:this.meta[d].object.text_extra})}this.self.destroy()},QuestionnaireInterpretationAssignment.prototype.cancelModal=function(){this.self.destroy()},QuestionnaireInterpretationAssignment.prototype.toggleEvaluation=function(){this.evaluationIsOpen=!this.evaluationIsOpen},QuestionnaireInterpretationAssignment.prototype.getEvaluationStyle=function(){if(!this.evaluationIsOpen)return{height:"0px",transform:"rotateX(90deg)",display:"block"}},QuestionnaireInterpretationAssignment.prototype.onClick=function(e){this.divOfferedInterpretations.element.nativeElement.contains(e.target)||(this.offeredInterpretationsAreExpanded=!1,this.clickListener())},QuestionnaireInterpretationAssignment.prototype.toggleOfferedInterpretations=function(){this.offeredInterpretationsAreExpanded?this.closeOfferedInterpretations():this.openOfferedInterpretations()},QuestionnaireInterpretationAssignment.prototype.openOfferedInterpretations=function(){var t=this;this.offeredInterpretationsAreExpanded=!0,this.clickListener=this.renderer.listen("document","click",function(e){return t.onClick(e)})},QuestionnaireInterpretationAssignment.prototype.closeOfferedInterpretations=function(){this.offeredInterpretationsAreExpanded=!1,this.clickListener&&this.clickListener()},QuestionnaireInterpretationAssignment.prototype.ngOnDestroy=function(){this.clickListener&&this.clickListener.destroy&&this.clickListener.destroy()},QuestionnaireInterpretationAssignment.prototype.updateField=function(e){this.meta[this.assignedInterpretations[e].id].nativelyTextExtra!==this.assignedInterpretations[e].text_extra&&(this.someExtraTextIsChanged=!0)},QuestionnaireInterpretationAssignment.prototype.toggleEditMode=function(e){this.meta[e].editMode=!this.meta[e].editMode},QuestionnaireInterpretationAssignment.prototype.closeEditMode=function(e){this.meta[e].editMode=!1},__decorate([core_1.ViewChild("divOfferedInterpretations",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],QuestionnaireInterpretationAssignment.prototype,"divOfferedInterpretations",void 0),__decorate([core_1.Component({selector:"questionnaire-interpretation-assignment",template:'<section role="dialog" tabindex="-1" class="slds-modal slds-fade-in-open slds-modal_large"><div class="slds-modal__container"><header class="slds-modal__header slds-theme_shade"><button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="{{language.getLabel(\'LBL_CLOSE\')}}" (click)="closeModal()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 class="slds-text-heading_medium slds-hyphenate"><system-label label="LBL_INTERPRETATION_ASSIGNMENT"></system-label></h2></header><div class="slds-modal__content slds-p-around_medium" style="height:100%"><div *ngIf="isLoading" class="slds-p-around--medium"><system-spinner></system-spinner></div><ng-container *ngIf="!isLoading"><div class="slds-section slds-m-top--none" [ngClass]="{\'slds-is-open\':evaluationIsOpen}"><h3 class="slds-section__title"><button class="slds-button slds-section__title-action" (click)="toggleEvaluation()"><system-utility-icon [icon]="\'switch\'" [size]="\'x-small\'" [addclasses]="\'slds-section__title-action-icon slds-button__icon slds-button__icon_left\'"></system-utility-icon><span class="slds-truncate" title="{{language.getLabel(\'LBL_EVALUATION\')}}"><system-label label="LBL_EVALUATION"></system-label></span></button></h3><div class="slds-section__content" [ngStyle]="getEvaluationStyle()"><questionnaire-evaluation [reference_id]="reference_id" [reference_type]="reference_module" [noAnimation]="true"></questionnaire-evaluation></div></div><div class="slds-section slds-is-open slds-m-bottom--none"><h3 class="slds-section__title slds-theme_shade"><span class="slds-truncate" title="Zugewiesene Interpretationen"><system-label label="LBL_ASSIGNED_INTERPRETATIONS"></system-label></span></h3><div class="slds-section__content"><div class="slds-grid slds-grid--align-spread"><div #divOfferedInterpretations class="slds-dropdown-trigger slds-dropdown-trigger--click" [ngClass]="{\'slds-is-open\':offeredInterpretationsAreExpanded}"><button class="slds-button slds-button--neutral" title="Interpretation hinzufÃ¼gen" (click)="toggleOfferedInterpretations()"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_ADD_INTERPRETATION"></system-label></button><div class="slds-dropdown slds-dropdown--left slds-dropdown--large"><ul *ngIf="offeredInterpretations.length;else noOfferedInterpretations" class="slds-dropdown__list slds-dropdown--length-5"><li *ngFor="let interpretation of offeredInterpretations; let i=index" class="slds-dropdown__item" (click)="addOffered(interpretation)"><a href="javascript:void(0);"><span class="slds-truncate">{{interpretation.name}}</span></a></li></ul><ng-template #noOfferedInterpretations><div class="slds-m-around--x-small"><system-label label="LBL_NO_UNASSIGNED_INTERPRETATIONS_AVAILABLE"></system-label></div></ng-template></div></div><div><button class="slds-button slds-button--neutral" (click)="complementWithSuggestion()"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon><system-label label="LBL_AUTO_COMPLETE_LIST"></system-label></button></div></div><div *ngIf="assignedInterpretations.length; else noInterpretations"><ul class="interpretations"><li *ngFor="let interpretation of assignedInterpretations; let i=index"><div class="slds-m-top--medium slds-box--border slds-p-around--small"><div class="slds-theme--shade slds-p-around--x-small slds-grid slds-grid_align-spread slds-grid--vertical-align-center"><div class="slds-text-heading_small"><span class="slds-truncate">{{interpretation.name}}</span></div><div class="slds-p-left--x-small"><button class="slds-button slds-button_icon slds-button_icon-container slds-button_icon-border-filled" (click)="removeSingle(i)" title="{{language.getLabel(\'LBL_REMOVE\')}}"><system-button-icon [icon]="\'delete\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_REMOVE"></system-label></span></button></div></div><div class="slds-p-around--x-small"><div [innerHTML]="sanitized.bypassSecurityTrustHtml(interpretation.text_short)"></div><div [ngClass]="{\'slds-m-top--x-small slds-border--top slds-p-top--x-small\':interpretation.text_extra.length>0}" class="slds-grid"><div class="slds-col" style="width:100%"><div *ngIf="!meta[interpretation.id].editMode" [innerHTML]="sanitized.bypassSecurityTrustHtml(interpretation.text_extra)"></div><system-tinymce *ngIf="meta[interpretation.id].editMode" [elementid]="interpretation.id" [(content)]="interpretation.text_extra" (contentChange)="updateField(i)"></system-tinymce></div><div class="slds-text-align_right slds-col slds-m-left--x-small"><ng-container *ngIf="!meta[interpretation.id].editMode"><system-button-icon *ngIf="interpretation.text_extra!=\'\'" [icon]="\'edit\'" title="{{language.getLabel(\'LBL_EDIT\')}}" (click)="meta[interpretation.id].editMode=true"></system-button-icon><button *ngIf="interpretation.text_extra==\'\'" class="slds-button slds-button--neutral" style="white-space:nowrap" (click)="meta[interpretation.id].editMode=true"><system-button-icon [icon]="\'add\'" [position]="\'left\'"></system-button-icon>Extra-Text â¦</button></ng-container><button *ngIf="meta[interpretation.id].editMode" class="slds-button slds-button_icon-container slds-button_icon-border-filled" (click)="closeEditMode(interpretation.id)"><system-button-icon [icon]="\'check\'"></system-button-icon><span class="slds-assistive-text"><system-label label="LBL_CLOSE"></system-label></span></button></div></div></div></div></li></ul></div><ng-template #noInterpretations><div class="slds-m-around--medium"><system-label label="LBL_NO_INTERPRETATIONS_ASSIGNED_YET"></system-label></div></ng-template></div></div></ng-container></div><footer class="slds-modal__footer"><ng-container *ngIf="someExtraTextIsChanged || nrAssignedInterpretationsChanged > 0"><button class="slds-button slds-button--neutral" (click)="cancelModal()"><system-label label="LBL_CANCEL"></system-label></button> <button class="slds-button slds-button--brand" (click)="closeModal()"><system-label label="LBL_SAVE"></system-label></button></ng-container><ng-container *ngIf="!someExtraTextIsChanged && nrAssignedInterpretationsChanged === 0"><button class="slds-button slds-button--brand" (click)="cancelModal()"><system-label label="LBL_CLOSE"></system-label></button></ng-container></footer></div></section>',styles:["ul.interpretations { margin-right: -1rem; }","ul.interpretations > li { float: left; width: 50%; }","ul.interpretations > li:nth-child(odd) { clear: left; }","ul.interpretations > li > div { margin-right: 1rem; }"]}),__metadata("design:paramtypes",[services_1.configurationService,services_1.language,services_1.backend,services_1.metadata,platform_browser_1.DomSanitizer,services_1.toast,core_1.Renderer2])],QuestionnaireInterpretationAssignment)}();exports.QuestionnaireInterpretationAssignment=QuestionnaireInterpretationAssignment;var QuestionnaireEditor=function(){function QuestionnaireEditor(e,t,s){this.lang=e,this.model=t,this.backend=s,this.questionsets=[],this.isLoadingQuestionsets=!0,this.categorypool={loaded:!1,event:new core_1.EventEmitter,list:[]}}return QuestionnaireEditor.prototype.ngOnInit=function(){var e=this;this.model.id?(this.loadQuestionsets(),this.loadQuestionOptionCategories(),this.createPreview()):this.model.data$.subscribe(function(){e.loadQuestionsets(),e.loadQuestionOptionCategories(),e.createPreview()})},QuestionnaireEditor.prototype.createPreview=function(){},Object.defineProperty(QuestionnaireEditor.prototype,"isLoading",{get:function(){return this.model.isLoading||this.isLoadingQuestionsets||!this.categorypool.loaded},enumerable:!1,configurable:!0}),QuestionnaireEditor.prototype.addQuestionset=function(e){e&&(this.questionsets.push(e),this.sortQuestionsets())},QuestionnaireEditor.prototype.reloadPreview=function(){this.questionnaireRender.reload()},QuestionnaireEditor.prototype.loadQuestionsets=function(){var n=this;this.isLoadingQuestionsets=!0,this.questionsets=[],this.backend.getRequest("module/Questionnaires/"+this.model.id+"/related/questionsets",{limit:999}).subscribe(function(e){for(var t=0,s=Object.keys(e);t<s.length;t++){var i=s[t];n.questionsets.push(e[i])}n.sortQuestionsets(),n.isLoadingQuestionsets=!1})},QuestionnaireEditor.prototype.loadQuestionOptionCategories=function(){var o=this;this.backend.getRequest("QuestionOptionCategories/getList").subscribe(function(e){var n,e=e;o.model.getField("categorypool")&&(n=o.model.getField("categorypool").split(","),e.forEach(function(e){for(var t=0,s=n;t<s.length;t++){var i=s[t];e.id===i&&o.categorypool.list.push(e)}})),o.categorypool.loaded=!0,o.categorypool.event.emit()})},QuestionnaireEditor.prototype.sortQuestionsets=function(){this.questionsets.sort(function(e,t){return parseInt(e.position,10)-parseInt(t.position,10)})},QuestionnaireEditor.prototype.removeQuestionset=function(e){this.questionsets.splice(e,1)},QuestionnaireEditor.prototype.trackBy=function(e,t){return t.id},QuestionnaireEditor.prototype.changeQuestionset=function(e,t){this.questionsets[t]=e,this.sortQuestionsets()},QuestionnaireEditor.prototype.drop=function(e){var t=this.questionsets.splice(e.previousIndex,1);this.questionsets.splice(e.currentIndex,0,t[0]);for(var s=[],i=0,n=0,o=this.questionsets;n<o.length;n++){var a=o[n];a.position=i,s.push({id:a.id,position:i}),i++}this.backend.postRequest("module/QuestionSets",{},s)},QuestionnaireEditor.prototype.dragStarted=function(e){e.source.element.nativeElement.classList.add("slds-is-selected")},QuestionnaireEditor.prototype.dragEnded=function(e){e.source.element.nativeElement.classList.remove("slds-is-selected")},__decorate([core_1.ViewChild(QuestionnaireRender,{static:!1}),__metadata("design:type",Object)],QuestionnaireEditor.prototype,"questionnaireRender",void 0),__decorate([core_1.Component({selector:"questionnaire-editor",template:'<div class="slds-grid"><div class="slds-size--1-of-2 slds-m-left--x-small"><div class="slds-grid slds-grid--align-spread slds-m-bottom--medium"><questionnaire-editor-questionset-add [questionnaire]="this.model" (newQuestionset)="addQuestionset($event)"></questionnaire-editor-questionset-add></div><div system-to-bottom class="slds-p-right--medium slds-m-bottom--medium dragboundary" cdkDropList (cdkDropListDropped)="drop($event)"><div *ngFor="let questionset of questionsets; let i=index; trackBy:trackBy; let isLast = last" [class.slds-m-bottom--medium]="!isLast" class="slds-grid" cdkDrag cdkDragBoundary=".dragboundary" (cdkDragStarted)="dragStarted($event)" (cdkDragEnded)="dragEnded($event)"><questionset-manager [questionset]="questionset" [categorypool]="categorypool" (changed)="changeQuestionset($event,i)" (deleted)="removeQuestionset(i)" style="width:100%"></questionset-manager></div></div></div><div class="slds-size--1-of-2 slds-p-horizontal--medium"><div class="slds-grid slds-grid--align-spread slds-p-bottom--medium"><div class="slds-border--bottom slds-grow slds-m-right--medium">{{lang.getLabel(\'LBL_PREVIEW\')}}</div><div><button class="slds-button slds-button_icon" (click)="reloadPreview()"><system-button-icon [icon]="\'refresh\'"></system-button-icon></button></div></div><div system-to-bottom class="slds-m-bottom--medium"><questionnaire-render [questionnaireId]="model.id" class="slds-p-right--medium" style="display:block" [inModal]="false"></questionnaire-render></div></div></div>',styles:["slds-tabs_default__content"]}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.backend])],QuestionnaireEditor)}();exports.QuestionnaireEditor=QuestionnaireEditor;var QuestionnaireEditorQuestionsetAdd=function(){function e(e,t){this.model=e,this.lang=t,this.disabled=!1,this.newQuestionset=new core_1.EventEmitter,this.model.module="QuestionSets"}return e.prototype.addQuestionset=function(){var t=this;this.model.id="",this.model.addModel("",this.questionnaire,null,!0).subscribe(function(e){return t.newQuestionset.emit(e)})},__decorate([core_1.Input(),__metadata("design:type",services_1.model)],e.prototype,"questionnaire",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"disabled",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"newQuestionset",void 0),__decorate([core_1.Component({selector:"questionnaire-editor-questionset-add",template:'<button (click)="addQuestionset()" class="slds-button slds-button--neutral" [disabled]="disabled"><system-button-icon icon="add" [position]="\'left\'"></system-button-icon><system-label label="LBL_QUESTIONSET"></system-label></button>',providers:[services_1.model]}),__metadata("design:paramtypes",[services_1.model,services_1.language])],e)}();exports.QuestionnaireEditorQuestionsetAdd=QuestionnaireEditorQuestionsetAdd;var QuestionsetManager=function(){function e(e,t,s){this.model=e,this.lang=t,this.modalservice=s,this.changed=new core_1.EventEmitter,this.deleted=new core_1.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.model.module="QuestionSets",this.model.id=this.questionset.id,this.model.data=this.questionset,this.currentPosition=this.questionset.position,this.model.data$.subscribe(function(){e.changed.emit(e.model.data)})},e.prototype.questionsetAction=function(e){var t=this;switch(e){case"edit":this.model.edit();break;case"delete":this.modalservice.confirm("Sind Sie sicher, dass Sie diese Fragegruppe lÃ¶schen wollen?","Fragegruppe lÃ¶schen?","shade").subscribe(function(e){e&&(t.model.delete(),t.deleted.emit())})}},e.prototype.dragStarted=function(e){e.source.element.nativeElement.classList.add("slds-is-selected")},e.prototype.dragEnded=function(e){e.source.element.nativeElement.classList.remove("slds-is-selected")},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"questionset",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"categorypool",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"changed",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],e.prototype,"deleted",void 0),__decorate([core_1.Component({selector:"questionset-manager",template:'<div class="slds-box slds-theme--shade"><questions-manager [showQuestionsetButtons]="true" [categorypool]="categorypool" (questionsetAction)="questionsetAction($event)"><div class="slds-text-body--small">{{lang.getLabel(\'LBL_QUESTIONSET\')}}</div><div class="slds-text-heading_small"><b>{{model.data.name}}</b></div></questions-manager></div>',providers:[services_1.model]}),__metadata("design:paramtypes",[services_1.model,services_1.language,services_1.modal])],e)}();exports.QuestionsetManager=QuestionsetManager;var QuestionnaireResults=function(){function QuestionnaireResults(e,t,s,i,n,o,a){this.model=e,this.metadata=t,this.language=s,this.backend=i,this.modal=n,this.injector=o,this.broadcast=a}return QuestionnaireResults.prototype.ngOnInit=function(){var t=this;this.broadcast.message$.subscribe(function(e){"questionnaireParticipation.saved"==e.messagetype&&e.messagedata.parentType===t.model.module&&e.messagedata.parentId===t.model.id&&t.questionnaireParticipation.reload()})},Object.defineProperty(QuestionnaireResults.prototype,"noParticipation",{get:function(){return this.questionnaireParticipation&&this.questionnaireParticipation.isLoaded&&!this.questionnaireParticipation.participationId},enumerable:!1,configurable:!0}),__decorate([core_1.Component({template:'<div class="slds-grid slds-grid--align-spread"><div *ngIf="noParticipation" style="width:100%"><div class="slds-text-align--center slds-text-heading--small slds-p-top--small"><system-label [label]="\'MSG_NO_QUESTIONNAIRE_PARTICIPATION_YET\'"></system-label></div></div></div><questionnaire-render *ngIf="!noParticipation" [parentType]="model.module" [parentId]="model.id" [editMode]="\'off\'" (questionnaireParticipation$)="questionnaireParticipation=$event" [showQuestionnaireTextBefore]="false" [showQuestionnaireTextAfter]="false"></questionnaire-render>',providers:[questionnaireParticipationService]}),__metadata("design:paramtypes",[services_1.model,services_1.metadata,services_1.language,services_1.backend,services_1.modal,core_1.Injector,services_1.broadcast])],QuestionnaireResults)}();exports.QuestionnaireResults=QuestionnaireResults;var QuestionnaireSingleEvaluationValues=function(){function QuestionnaireSingleEvaluationValues(e,t,s,i){this.backend=e,this.model=t,this.language=s,this.broadcast=i,this.sectionIsOpen=!0,this.isLoading=!0,this.evaluationValues=[],this.source=""}return QuestionnaireSingleEvaluationValues.prototype.ngOnInit=function(){var t=this;if(this.model.isNew)return this.noParticipation=!0,void(this.isLoading=!1);this.loadValues(),this.broadcast.message$.subscribe(function(e){"questionnaireParticipation.saved"==e.messagetype&&e.messagedata.parentType===t.model.module&&e.messagedata.parentId===t.model.id&&t.reloadValues()})},QuestionnaireSingleEvaluationValues.prototype.toggleSection=function(){this.sectionIsOpen=!this.sectionIsOpen},QuestionnaireSingleEvaluationValues.prototype.getSectionStyle=function(){if(!this.sectionIsOpen)return{height:"0px",transform:"rotateX(90deg)"}},QuestionnaireSingleEvaluationValues.prototype.loadValues=function(){var s=this;this.backend.postRequest("module/QuestionnaireEvaluations/generate/byReference/ServiceFeedbacks/"+this.model.id).subscribe(function(e){if(s.isLoading=!1,s.source=e.source,s.noParticipation="noParticipation"===e.source,e.values)for(var t in e.values)s.evaluationValues.push(e.values[t]),s.language.sortObjects(s.evaluationValues,"name")},function(e){404===e.status&&(s.noParticipation=!0,s.isLoading=!1)})},QuestionnaireSingleEvaluationValues.prototype.reloadValues=function(){this.isLoading=!0,this.source="",this.evaluationValues.length=0,this.loadValues()},__decorate([core_1.Component({selector:"questionnaire-single-evaluation-values",template:'<system-collapsable-tab tabtitle="LBL_EVALUATION" [collapsible]="true"><div class="slds-m-horizontal_xx-small slds-m-vertical_small"><system-stencil *ngIf="isLoading"></system-stencil><div *ngIf="!isLoading"><span *ngIf="!noParticipation"><span *ngFor="let value of evaluationValues" class="slds-badge slds-badge_lightest slds-text-body_regular quest-eval-catname">{{value.name}} <span class="slds-badge slds-badge slds-text-body_regular quest-eval-points">{{value.points}}</span></span></span> <span *ngIf="noParticipation" class="slds-m-horizontal--x-small"><system-label label="MSG_NO_QUESTIONNAIRE_PARTICIPATION_YET"></system-label></span></div></div></system-collapsable-tab>',styles:["span.quest-eval-points { display: inline-block; text-align: center; min-width: 2rem; margin-left:0.33rem; font-weight: normal; border: 1px solid #fff; }","span.quest-eval-catname { padding-top:0; padding-bottom:0; padding-right:0; font-weight: normal; }"]}),__metadata("design:paramtypes",[services_1.backend,services_1.model,services_1.language,services_1.broadcast])],QuestionnaireSingleEvaluationValues)}();exports.QuestionnaireSingleEvaluationValues=QuestionnaireSingleEvaluationValues;var QuestionnaireEntireEvaluation=function(){function QuestionnaireEntireEvaluation(e,t,s){this.backend=e,this.model=t,this.userPreferences=s,this.questionsets=[],this.questions={},this.options={},this.answers={},this.imageWidthQuestion=200,this.imageWidthOption=200,this.relativeTo="questionnaires"}return QuestionnaireEntireEvaluation.prototype.ngOnInit=function(){this.questionnaireId=void 0!==this.inputQuestionnaireId?this.inputQuestionnaireId:this.model.id,this.loadQuestionnaire(),this.loadQuestionsets(),this.loadAnwers()},QuestionnaireEntireEvaluation.prototype.loadQuestionnaire=function(){var t=this;this.isLoadingQuestionnaire||(this.isLoadingQuestionnaire=!0,this.questionnaireId?this.backend.getRequest("module/Questionnaires/"+this.questionnaireId).subscribe(function(e){t.questionnaire=e,t.isLoadingQuestionnaire=!1}):(this.questionnaire=this.model.data,this.isLoadingQuestionnaire=!1))},QuestionnaireEntireEvaluation.prototype.loadAnwers=function(){var t=this;this.isLoadingAnswers||(this.isLoadingAnswers=!0,this.backend.getRequest("module/Questionnaires/"+this.questionnaireId+"/answers/allParticipations").subscribe(function(e){t.answers=e.answers,t.countQuestionnaireParticipations=e.countQuestionnaireParticipations,t.isLoadingAnswers=!1}))},Object.defineProperty(QuestionnaireEntireEvaluation.prototype,"isLoading",{get:function(){return this.isLoadingQuestionsets||this.isLoadingQuestionnaire||this.isLoadingAnswers},enumerable:!1,configurable:!0}),QuestionnaireEntireEvaluation.prototype.loadQuestionsets=function(){var m=this;this.isLoadingQuestionsets||(this.isLoadingQuestionsets=!0,this.questionsets=[],this.backend.getRequest("module/Questionnaires/"+this.questionnaireId+"/related/questionsets",{limit:999}).subscribe(function(e){for(var t=0,s=Object.keys(e);t<s.length;t++){var i=s[t];m.questionsets.push(e[i])}m.questionsets.sort(function(e,t){return e.position-t.position});for(var n=function(p){if(p.questiontypeparameter=p.questiontypeparameter&&""!==p.questiontypeparameter?JSON.parse(p.questiontypeparameter):{},m.questions[p.id]=[],p.questions&&p.questions.beans){var e=Object.keys(p.questions.beans);e.sort(function(e,t){var s=p.questions.beans[e].position-p.questions.beans[t].position;return 0!=s?s:p.questions.beans[e].date_entered<p.questions.beans[t].date_entered?-1:p.questions.beans[e].date_entered>p.questions.beans[t].date_entered?1:0});for(var t=0,s=e;t<s.length;t++){var i=s[t];m.questions[p.id].push(p.questions.beans[i])}for(var n=0,o=m.questions[p.id];n<o.length;n++)!function(s){if(m.options[s.id]=[],s.questionoptions&&s.questionoptions.beans){var e=Object.keys(s.questionoptions.beans);if(p.questiontype.match(/^binary|single|multi|ist$/)){e.sort(function(e,t){return s.questionoptions.beans[e].position-s.questionoptions.beans[t].position});for(var t=0,i=e;t<i.length;t++){var n=i[t];m.options[s.id].push(s.questionoptions.beans[n])}}else if("ratinggroup"===p.questiontype&&p.questiontypeparameter.rating){for(var o=[],a=0,r=p.questiontypeparameter.rating.entries;a<r.length;a++){for(var l=r[a],d=!1,u=0,c=e;u<c.length;u++){n=c[u];if(s.questionoptions.beans[n].questionset_type_parameter_id===l.id){d=!0,o.push(s.questionoptions.beans[n]);break}}d||o.push({})}m.options[s.id]=o}}}(o[n])}},o=0,a=m.questionsets;o<a.length;o++)n(a[o]);m.isLoadingQuestionsets=!1}))},QuestionnaireEntireEvaluation.prototype.getEvaluationValue=function(e,t){try{return void 0===this.answers[e].optionCounts[t]?0:this.answers[e].optionCounts[t]}catch(e){return 0}},QuestionnaireEntireEvaluation.prototype.countQuestionParticipations=function(e){try{return this.answers[e].countParticipations}catch(e){return 0}},QuestionnaireEntireEvaluation.prototype.reload=function(){this.isLoading||(this.loadQuestionnaire(),this.loadQuestionsets(),this.loadAnwers())},QuestionnaireEntireEvaluation.prototype.getQuestionParticipationBarWidth=function(e){try{return{width:this.countQuestionParticipations(e)/this.countQuestionnaireParticipations*100+"%"}}catch(e){return 0}},QuestionnaireEntireEvaluation.prototype.getAnswerBarWidth=function(e,t){try{return{width:(void 0===this.answers[e].optionCounts[t]?0:this.answers[e].optionCounts[t])/("questionnaires"===this.relativeTo?this.countQuestionnaireParticipations:this.answers[e].countParticipations)*100+"%"}}catch(e){return 0}},QuestionnaireEntireEvaluation.prototype.getQuestionParticipationsInPercent=function(e){try{return this.userPreferences.formatMoney(this.answers[e].countParticipations/this.countQuestionnaireParticipations*100,2)}catch(e){return"0,00"}},QuestionnaireEntireEvaluation.prototype.allOptionsNumeric=function(e){for(var t=0,s=this.options[e];t<s.length;t++){var i=s[t];if(isNaN(i.name))return!1}return!0},QuestionnaireEntireEvaluation.prototype.averageOfAnswers=function(e){try{return this.userPreferences.formatMoney(this.answers[e].optionlessAnswerValue/this.answers[e].countParticipations,2)}catch(e){return"0,00"}},QuestionnaireEntireEvaluation.prototype.questionsetIsToShow=function(e){return/^rating|nps|single|multi|binary$/.test(e.questiontype)},__decorate([core_1.Input("questionnaireId"),__metadata("design:type",String)],QuestionnaireEntireEvaluation.prototype,"inputQuestionnaireId",void 0),__decorate([core_1.Component({selector:"questionnaire-entire-evaluation",template:'<system-spinner *ngIf="isLoading" class="slds-m-top--large" style="display:block"></system-spinner><div *ngIf="!isLoading" class="slds-m-bottom--medium slds-m-horizontal_x-small"><div class="slds-grid slds-grid--align-spread slds-p-horizontal_medium slds-grid--vertical-align-center slds-m-bottom_medium"><fieldset class="slds-form-element slds-grid slds-grid--vertical-align-center"><legend class="slds-form-element__legend slds-form-element__label slds-p-top_none"><system-label label="LBL_BASED_ON"></system-label>:</legend><div class="slds-form-element__control"><div class="slds-radio_button-group"><span class="slds-button slds-radio_button"><input type="radio" id="questionnaire-entire-evaluation-radio1" [(ngModel)]="relativeTo" value="questionnaires"> <label class="slds-radio_button__label" for="questionnaire-entire-evaluation-radio1"><span class="slds-radio_faux"><system-label label="LBL_QUESTIONNAIRES"></system-label></span></label></span> <span class="slds-button slds-radio_button"><input type="radio" id="questionnaire-entire-evaluation-radio2" [(ngModel)]="relativeTo" value="questions"> <label class="slds-radio_button__label" for="questionnaire-entire-evaluation-radio2"><span class="slds-radio_faux"><system-label label="LBL_ANSWERED_QUESTIONS"></system-label></span></label></span></div></div></fieldset><button class="slds-button slds-button_icon" (click)="reload()"><system-utility-icon icon="refresh" size="small"></system-utility-icon></button></div><div *ngIf="questionsets.length; else noQuestionsetsTemplate"><div *ngFor="let questionset of questionsets; last as isLast"><div *ngIf="questionsetIsToShow( questionset )" class="slds-box slds-theme_shade x-slds-m-top--x-small" [ngClass]="{\'slds-m-bottom_medium\': !isLast}" style="padding:0.5rem"><h3 class="slds-text-heading--medium slds-p-horizontal--xx-small">{{questionset.name}}</h3><div class="slds-m-top--x-small"><ng-container *ngIf="questions[questionset.id].length; else noQuestionsTemplate"><div *ngFor="let question of questions[questionset.id]; last as isLast"><div class="slds-box slds-theme_default" style="padding-top:0.5rem" [ngClass]="{\'slds-m-bottom_x-small\': !isLast}"><div class="slds-grid slds-grid_align-spread slds-grid_vertical-align-center"><div><h3 *ngIf="!question.image_id || questionset.showonlyimages !== \'1\'" class="slds-text-heading_medium">{{question.name}}</h3><media-file-image *ngIf="question.image_id" [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="imageWidthQuestion" [classOuter]="\'slds-m-top--small\'"></media-file-image></div><div class="slds-m-bottom_xx-small" style="min-width:210px"><div class="slds-p-bottom_xxx-small slds-text-align_center">{{getQuestionParticipationsInPercent( question.id )}} % <system-label label="LBL_ANSWERED"></system-label> ({{countQuestionParticipations( question.id )}}/{{countQuestionnaireParticipations}})</div><div class="slds-progress-bar x-slds-theme--error slds-progress-bar--circular slds-progress-bar--small"><span class="slds-progress-bar__value x-slds-progress-bar__value_success" [ngStyle]="getQuestionParticipationBarWidth( question.id )"><span class="slds-assistive-text">{{countQuestionParticipations( question.id )}}</span></span></div></div></div><table class="slds-table slds-table_col-bordered slds-table_bordered slds-table_header-hidden slds-m-top_x-small" style="x-border-bottom:0"><tbody><ng-container *ngIf="questionset.questiontype === \'single\' || questionset.questiontype === \'multi\' || questionset.questiontype === \'binary\'"><tr *ngFor="let option of options[question.id];let j=index"><td style="width:100%"><media-file-image *ngIf="option.image_id" [media_id]="option.image_id" [variant]="\'mw\'" [frameWidth]="imageWidthOption" [classOuter]="\'slds-m-bottom--small\'"></media-file-image><ng-container *ngIf="!( option.image_id && questionset.showonlyimages === \'1\' )">{{option.name}}</ng-container></td><td style="min-width:120px"><div class="slds-progress-bar slds-progress-bar--circular slds-progress-bar--large"><span class="slds-progress-bar__value" [ngStyle]="getAnswerBarWidth( question.id, option.id )"><span class="slds-assistive-text">{{getEvaluationValue( question.id, option.id )}}</span></span></div></td><td class="slds-text-align--right slds-text-heading_small" style="width:0">{{getEvaluationValue( question.id, option.id )}}</td></tr></ng-container><ng-container *ngIf="questionset.questiontype === \'rating\'"><tr *ngFor="let option of options[question.id];let j=index"><td style="width:100%"><media-file-image *ngIf="option.image_id" [media_id]="option.image_id" [variant]="\'mw\'" [frameWidth]="imageWidthOption" [classOuter]="\'slds-m-bottom--small\'"></media-file-image><ng-container *ngIf="!( option.image_id && questionset.showonlyimages === \'1\' )">{{option.name}}</ng-container></td><td style="min-width:120px"><div class="slds-progress-bar slds-progress-bar--circular slds-progress-bar--large"><span class="slds-progress-bar__value" [ngStyle]="getAnswerBarWidth( question.id, option.id )"><span class="slds-assistive-text">{{getEvaluationValue( question.id, option.id )}}</span></span></div></td><td class="slds-text-align--right slds-text-heading_small" style="width:0">{{getEvaluationValue( question.id, option.id )}}</td></tr></ng-container><ng-container *ngIf="questionset.questiontype === \'nps\'"><tr *ngFor="let option of options[question.id];let j=index"><td style="width:100%"><media-file-image *ngIf="option.image_id" [media_id]="option.image_id" [variant]="\'mw\'" [frameWidth]="imageWidthOption" [classOuter]="\'slds-m-bottom--small\'"></media-file-image><ng-container *ngIf="!( option.image_id && questionset.showonlyimages === \'1\' )">{{option.name}}</ng-container></td><td style="min-width:120px"><div class="slds-progress-bar slds-progress-bar--circular slds-progress-bar--large"><span class="slds-progress-bar__value" [ngStyle]="getAnswerBarWidth( question.id, option.id )"><span class="slds-assistive-text">{{getEvaluationValue( question.id, option.id )}}</span></span></div></td><td class="slds-text-align--right slds-text-heading_small" style="width:0">{{getEvaluationValue( question.id, option.id )}}</td></tr></ng-container></tbody></table><div *ngIf="questionset.questiontype === \'nps\' || ( questionset.questiontype === \'rating\' && allOptionsNumeric( question.id ))" class="slds-text-align_right slds-text-heading_small x-slds-border--top slds-p-top--xx-small slds-p-right--x-small"><b>&Oslash;&nbsp; {{averageOfAnswers( question.id )}}</b></div></div></div></ng-container><ng-template #noQuestionsTemplate><p><system-label label="LBL_NO_QUESTIONS_TO_DISPLAY"></system-label></p></ng-template></div></div></div></div><ng-template #noQuestionsetsTemplate><p><system-label label="LBL_NO_QUESTIONSETS_TO_DISPLAY"></system-label></p></ng-template></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.model,services_1.userpreferences])],QuestionnaireEntireEvaluation)}();exports.QuestionnaireEntireEvaluation=QuestionnaireEntireEvaluation;var QuestionnaireFillOutButton=function(){function QuestionnaireFillOutButton(e,t,s){this.language=e,this.model=t,this.modal=s,this.disabled=!1}return QuestionnaireFillOutButton.prototype.execute=function(){var t=this;this.modal.openModal("QuestionnaireFillOutModal").subscribe(function(e){e.instance.parentId=t.model.id,e.instance.parentType=t.model.module})},__decorate([core_1.Component({selector:"questionnaire-fill-out-button",template:'<system-label label="LBL_FILL_IN_QUESTIONNAIRE"></system-label>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.modal])],QuestionnaireFillOutButton)}();exports.QuestionnaireFillOutButton=QuestionnaireFillOutButton;var QuestionnaireFillOutModal=function(){function QuestionnaireFillOutModal(e,t){this.modal=e,this.language=t,this.subscriptions=new rxjs_1.Subscription}return QuestionnaireFillOutModal.prototype.ngOnInit=function(){this.qp=this.questionnaireParticipation},QuestionnaireFillOutModal.prototype.cancel=function(){this.qpIsSaving||this.self.destroy()},QuestionnaireFillOutModal.prototype.saveAndClose=function(e){var t=this;this.qpIsSaving||this.subscriptions.add(this.qp.save(e).subscribe(function(e){e&&t.self.destroy()}))},QuestionnaireFillOutModal.prototype.onModalEscX=function(){var t=this;if(!this.qpIsSaving)return!this.qpIsDirty||(this.subscriptions.add(this.modal.confirm(this.language.getLabel("Discard changes?")).subscribe(function(e){e&&t.self.destroy()})),!1)},QuestionnaireFillOutModal.prototype.ngOnDestroy=function(){this.subscriptions.unsubscribe()},__decorate([core_1.Input(),__metadata("design:type",String)],QuestionnaireFillOutModal.prototype,"questionnaireId",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],QuestionnaireFillOutModal.prototype,"parentId",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],QuestionnaireFillOutModal.prototype,"parentType",void 0),__decorate([core_1.Component({selector:"questionnaire-fill-out-modal",template:'<system-modal size="large"><system-modal-header (close)="onModalEscX()"><system-label label="LBL_FILL_IN_QUESTIONNAIRE"></system-label></system-modal-header><system-modal-content [grow]="true"><questionnaire-render *ngIf="parentId !== undefined && parentType !== undefined" [parentId]="parentId" [parentType]="parentType" editMode="questionnaire" (questionnaireParticipation$)="qp = $event" [showQuestionnaireTextBefore]="false" [showQuestionnaireTextAfter]="false" (isDirty$)="qpIsDirty=$event" (isSaving$)="qpIsSaving=$event" (isLoaded$)="qpIsLoaded=$event"></questionnaire-render></system-modal-content><system-modal-footer><div class="slds-grid slds-grid--align-spread slds-grid--vertical-align-center"><div><span *ngIf="qpIsLoaded && qp && qp.isCompleted">Participation is formally completed.</span></div><div><button [disabled]="!qpIsDirty || qpIsSaving" class="slds-button slds-button--brand" (click)="saveAndClose(false)"><system-label label="LBL_SAVE"></system-label></button> <button *ngIf="qpIsLoaded && !qp.isCompleted" [disabled]="!qpIsDirty || qpIsSaving" class="slds-button slds-button--brand" (click)="saveAndClose(true)"><system-label label="LBL_SAVE_AND_FINISH"></system-label></button> <button [disabled]="qpIsSaving" class="slds-button slds-button--neutral" (click)="cancel()"><system-label label="LBL_CANCEL"></system-label></button></div></div></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.modal,services_1.language])],QuestionnaireFillOutModal)}();exports.QuestionnaireFillOutModal=QuestionnaireFillOutModal;var QuestionRenderBasic=function(){function e(e){this.questionnaireParticipation=e,this.qp=e}return e.prototype.ngOnInit=function(){this.questionMeta=this.qp.questionsMeta[this.questionId],this.question=this.qp.questions[this.questionId],this.questionset=this.question.parentQuestionset,this.questionparameter=_.isEmpty(this.question.questionparameter)?this.questionset.questiontypeparameter:this.question.questionparameter},e.prototype.isDisabled=function(){return!1},Object.defineProperty(e.prototype,"hasTitleTextOrImage",{get:function(){return!(!this.question.questiontext&&!this.question.image_id)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isToMergeWithFollowingQuestion",{get:function(){return!(this.hasTitleTextOrImage||!this.followingQuestion||this.followingQuestion.questiontype!==this.question.questiontype)},enumerable:!1,configurable:!0}),e.prototype.styleQuestionMerging=function(){var e={};return this.isToMergeWithFollowingQuestion&&(e["margin-bottom"]="-1rem",e["border-bottom"]="none"),e},__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"questionId",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"previousQuestion",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"followingQuestion",void 0),__decorate([core_1.Component({selector:"questionset-render-basic",template:""}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}();exports.QuestionRenderBasic=QuestionRenderBasic;var QuestionTypeISTTextPipe=function(){function e(){}return e.prototype.transform=function(e){for(var t=[],s=0;s<5&&!1!==e;)e=this.findNext(e,t,s),s++;return t},e.prototype.findNext=function(e,t,s){var i=e.indexOf("?");return 0<=i?(0<i&&t.push({type:"text",text:e.substring(0,i)}),t.push({type:"option",index:s}),e.substring(i+1)):(t.push({type:"text",text:e}),!1)},__decorate([core_1.Pipe({name:"questiontypeisttextspipe"})],e)}();exports.QuestionTypeISTTextPipe=QuestionTypeISTTextPipe;var QuestionTypeISTOptionsPipe=function(){function e(){}return e.prototype.transform=function(e){return e?e.split(","):[]},__decorate([core_1.Pipe({name:"questiontypeistoptionspipe"})],e)}();exports.QuestionTypeISTOptionsPipe=QuestionTypeISTOptionsPipe;var QuestionRenderIST=function(s){function e(e){var t=s.call(this,e)||this;return t.questionnaireParticipation=e,t}return __extends(e,s),e.prototype.getAnswerValue=function(e){try{var t=this.qp.questionoptionsArray[this.questionId][e].id;return this.qp.answers[this.questionId].options[t]}catch(e){return""}},e.prototype.ngOnInit=function(){s.prototype.ngOnInit.call(this),this.question.questiontext||(this.question.questiontext=this.question.name)},e.prototype.onChange=function(e,t){t.stopPropagation();e=this.qp.questionoptionsArray[this.questionId][e].id;return this.qp.setOptionWithValue(e,t.target.value)},Object.defineProperty(e.prototype,"isToMergeWithFollowingQuestion",{get:function(){return!(!this.followingQuestion||"ist"!==this.followingQuestion.questiontype)},enumerable:!1,configurable:!0}),__decorate([core_1.Component({selector:"question-render-ist",template:'<ng-container *ngIf="qp.isLoaded"><ng-container *ngIf="!qp.hideFinishedQuestions || !questionMeta.finished"><div class="slds-box slds-m-bottom_medium question-render-question" style="padding:0.5rem" [ngStyle]="styleQuestionMerging()"><div class="slds-grid slds-grid_vertical-align-center"><div class="slds-grid slds-grid_vertical-align-center"><ng-container *ngFor="let textitem of question.questiontext|questiontypeisttextspipe"><h3 class="slds-text-heading_medium slds-p-horizontal_x-small" *ngIf="textitem.type == \'text\'">{{textitem.text}}</h3><div class="slds-form-element slds-p-horizontal_x-small" *ngIf="textitem.type == \'option\'"><div class="slds-form-element__control"><div *ngIf="qp.questionoptionsArray[question.id][textitem.index*1].description && qp.questionoptionsArray[question.id][textitem.index].description != \'\'" class="slds-select_container"><select class="slds-select" [disabled]="questionMeta.tempReadonly || qp.editMode === \'off\'" [value]="getAnswerValue(textitem.index)" (change)="onChange(textitem.index, $event)"><option></option><option *ngFor="let seloption of qp.questionoptionsArray[question.id][textitem.index].description|questiontypeistoptionspipe" [ngValue]="seloption">{{seloption}}</option></select></div><input *ngIf="!qp.questionoptionsArray[question.id][textitem.index].description || qp.questionoptionsArray[question.id][textitem.index].description == \'\'" style="width: 50px" type="text" class="slds-input" [value]="getAnswerValue(textitem.index)" (blur)="onChange(textitem.index, $event)"></div></div></ng-container></div></div></div></ng-container></ng-container>',styles:["div.question-render-question:last-child { margin-bottom: 0; }","div.question-render-question { border-radius:0; }"]}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}(QuestionRenderBasic);exports.QuestionRenderIST=QuestionRenderIST;var QuestionRenderRating=function(s){function e(e){var t=s.call(this,e)||this;return t.questionnaireParticipation=e,t.ratingValuesHaveAlsoText=!1,t.altTexts={},t}return __extends(e,s),e.prototype.ngOnInit=function(){for(var e in s.prototype.ngOnInit.call(this),"undefined"!==this.questionMeta.parameter.altTexts&&(this.altTexts=this.questionMeta.parameter.altTexts),this.altTexts)if(""!=this.altTexts[e]){this.ratingValuesHaveAlsoText=!0;break}},e.prototype.onClick=function(e){return this.questionnaireParticipation.clickAnswerOption(this.questionId,e)},e.prototype.isChecked=function(e){return this.qp.answers&&this.qp.answers[this.questionId]&&this.qp.answers[this.questionId].options&&this.qp.answers[this.questionId].options[e]},__decorate([core_1.Component({selector:"question-render-rating",template:'<ng-container *ngIf="qp.isLoaded"><table *ngIf="!qp.hideFinishedQuestions || !questionMeta.finished" class="slds-table slds-table_bordered slds-table_col-bordered slds-no-row-hover slds-border_left slds-border_right slds-border_top"><thead><tr class="slds-text-title_caps"><th style="background-color:inherit;width:100%"></th><th *ngFor="let option of qp.questionoptionsArray[question.id]" class="slds-text-align_center"><div *ngIf="ratingValuesHaveAlsoText" class="slds-border_bottom slds-p-bottom_xx-small slds-m-bottom_xx-small"><ng-container *ngIf="altTexts[option.id] !== \'\'; else nbsp">{{altTexts[option.id]}}</ng-container><ng-template #nbsp>&nbsp;</ng-template></div>{{option.name}}</th></tr></thead><tbody><tr><td><ng-container *ngIf="question.image_id"><media-file-image [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="qp.imageWidthQuestion"></media-file-image></ng-container><div *ngIf="!question.image_id || question.showonlyimages !== \'1\'" class="slds-truncate" style="white-space: normal">{{question.questiontext}}</div></td><td class="slds-text-align_center question-hover" *ngFor="let option of qp.questionoptionsArray[question.id]; let j = index;" (click)="qp.clickAnswerOption(option.id,$event)"><input title="{ {altTexts[option.id]} }" type="radio" [checked]="isChecked(option.id)" (click)="qp.clickAnswerOption(option.id,$event)" [disabled]="isDisabled()"></td></tr></tbody></table></ng-container>',styles:["table { border-top: none; }","th { position: sticky; top: 0; border-top: 1px solid #dddbda; border-bottom: 1px solid #dddbda; z-index: 10;}","tr:first-child td { border-top: none; }","div.question-render-question { border-radius:0; }","td.question-hover:hover { background-color: #f3f2f2; }","td { padding: 0.5rem 0.75rem; }"]}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}(QuestionRenderBasic);exports.QuestionRenderRating=QuestionRenderRating;var QuestionRenderText=function(s){function e(e){var t=s.call(this,e)||this;return t.questionnaireParticipation=e,t.lengthLongestSequence=0,t.questionNameSplitted=[],t}return __extends(e,s),e.prototype.ngOnInit=function(){s.prototype.ngOnInit.call(this),this.questionMeta.parameter.sequenced&&(this.questionNameSplitted=this.question.name.split(","),this.questionNameSplitted.length>this.lengthLongestSequence&&(this.lengthLongestSequence=this.questionNameSplitted.length))},e.prototype.onTextChange=function(){return this.questionnaireParticipation.setAnswerValue(this.questionId,this.qp.answers[this.questionId].optionlessAnswerValue)},e.prototype.forLoopArray=function(e){return new Array(e)},e.prototype.binaryTableStyle=function(){var e={};return this.isToMergeWithFollowingQuestion&&(e["border-bottom"]="none",e["margin-bottom"]="-1rem"),e},Object.defineProperty(e.prototype,"isToMergeWithFollowingQuestion",{get:function(){return!!(this.questionMeta.parameter.sequenced&&this.followingQuestion&&"text"===this.followingQuestion.questiontype&&this.qp.questionsMeta[this.followingQuestion.id].parameter.sequenced)},enumerable:!1,configurable:!0}),__decorate([core_1.Component({selector:"question-render-text",template:'<ng-container *ngIf="qp.isLoaded"><ng-container *ngIf="!qp.hideFinishedQuestions || !questionMeta.finished"><div *ngIf="questionMeta.parameter && !questionMeta.parameter.sequenced" class="slds-box question-render-question"><div *ngIf="question.questiontext || question.image_id" class="slds-m-bottom_x-small"><h3 *ngIf="!question.image_id || questionset.showonlyimages !== \'1\'" class="x-slds-text-heading_medium" [class.slds-m-bottom_xx-small]="question.image_id">{{question.questiontext}}</h3><div class="slds-m-bottom_small"><media-file-image *ngIf="question.image_id" [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="qp.imageWidthQuestion"></media-file-image></div></div><div><textarea *ngIf="qp.editMode === \'preview\'" class="slds-scrollable_y slds-textarea"></textarea> <textarea [system-trim-input] class="slds-scrollable_y slds-textarea" *ngIf="qp.editMode !== \'preview\'" [(ngModel)]="qp.answers[question.id].optionlessAnswerValue" (change)="onTextChange()" [attr.disabled]="questionMeta.tempReadonly || qp.editMode === \'off\' ? \'\':null"></textarea></div></div><div *ngIf="questionMeta && questionMeta.parameter && questionMeta.parameter.sequenced" class="sequenced slds-box question-render-question slds-text-align_right slds-grid slds-grid_vertical-align-center" style="padding:0.5rem 0.5rem 0.5rem 1rem" [ngStyle]="binaryTableStyle()"><div *ngFor="let item of forLoopArray(lengthLongestSequence); let j=index" class="slds-p-right_large x-lds-p-vertical_small slds-text-heading_small">{{questionNameSplitted[j]}}</div><div class="slds-text-align_right x-slds-p-vertical_small slds-col--bump-left"><input [system-trim-input] type="text" *ngIf="qp.editMode === \'preview\'" size="5" class="slds-input"> <input [system-trim-input] type="text" *ngIf="qp.editMode !== \'preview\'" [ngModel]="qp.answers[question.id].optionlessAnswerValue" (change)="onTextChange()" [attr.disabled]="questionMeta.tempReadonly || qp.editMode === \'off\' ? \'\':null" size="5" style="width:auto" class="slds-input"></div></div></ng-container></ng-container>',styles:[".questionset-render .sequenced { font-family: monospace; }",".questionset-render table.sequenced { margin: 0 0 0 auto; }","div.question-render-question { border-radius:0; }"]}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}(QuestionRenderBasic);exports.QuestionRenderText=QuestionRenderText;var QuestionRenderNPS=function(s){function e(e){var t=s.call(this,e)||this;return t.questionnaireParticipation=e,t}return __extends(e,s),e.prototype.ngOnInit=function(){s.prototype.ngOnInit.call(this)},e.prototype.onClick=function(e,t){return t.stopPropagation(),(e=e.toString())===this.qp.answers[this.questionId].optionlessAnswerValue&&(e=""),this.qp.setAnswerValue(this.questionId,e)},e.prototype.isChecked=function(e,t){return this.qp.answers[e].optionlessAnswerValue&&this.qp.answers[e].optionlessAnswerValue==t},__decorate([core_1.Component({selector:"question-render-nps",template:'<ng-container *ngIf="qp.isLoaded"><table *ngIf="!qp.hideFinishedQuestions || !questionMeta.finished" class="slds-table slds-table_bordered slds-table_col-bordered slds-no-row-hover slds-border_left slds-border_right slds-border_top" [ngClass]="{\'with-text-for-score\':questionMeta.parameter.textForScore0 || questionMeta.parameter.textForScore10}"><thead><tr class="slds-text-title_caps"><th style="background-color:inherit;width:100%" class="th1"></th><th *ngFor="let score of [0,1,2,3,4,5,6,7,8,9,10]" class="slds-text-align_center">{{score}}</th></tr><tr *ngIf="questionMeta.parameter.textForScore0 || questionMeta.parameter.textForScore10"><th style="background-color:inherit" class="th2"></th><th colspan="6" class="slds-text-body_regular" style="border-right:none;border-top:none;white-space:normal">{{questionMeta.parameter.textForScore0}}</th><th colspan="5" class="slds-text-body_regular slds-text-align_right" style="border-top:none;padding-left:0;border-left:none;white-space:normal">{{questionMeta.parameter.textForScore10}}</th></tr></thead><tbody><tr *ngIf="!qp.hideFinishedQuestions || !questionMeta.finished"><td><ng-container *ngIf="question.image_id"><media-file-image [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="qp.imageWidthQuestion"></media-file-image></ng-container><div *ngIf="!question.image_id || questionset.showonlyimages !== \'1\'" class="slds-truncate" style="white-space: normal">{{question.name}}</div></td><td class="slds-text-align_center question-hover" *ngFor="let score of [0,1,2,3,4,5,6,7,8,9,10]" (click)="onClick(score,$event)"><input title="{{score}}" type="radio" [checked]="isChecked(question.id,score)" name="{{question.id}}" (click)="onClick(score,$event)" [disabled]="isDisabled()"></td></tr></tbody></table></ng-container>',styles:["table { border-top: none; }","th { position: sticky; top: 0; border-top: 1px solid #dddbda; border-bottom: 1px solid #dddbda; z-index: 10;}","tr:first-child td { border-top-width: 0; }","td.question-hover:hover { background-color: #f3f2f2; }","td { padding: 0.5rem 0.75rem }","table.with-text-for-score th.th1 { border-bottom: none; }","th.th2 { border-top: none; }"]}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}(QuestionRenderBasic);exports.QuestionRenderNPS=QuestionRenderNPS;var QuestionRenderBinarySingleMulti=function(s){function e(e){var t=s.call(this,e)||this;return t.questionnaireParticipation=e,t}return __extends(e,s),e.prototype.ngOnInit=function(){s.prototype.ngOnInit.call(this)},e.prototype.isChecked=function(e){return this.qp.answers&&this.qp.answers[this.questionId]&&this.qp.answers[this.questionId].options&&this.qp.answers[this.questionId].options[e]},__decorate([core_1.Component({selector:"question-render-binary-single-multi",template:'<ng-container *ngIf="qp.isLoaded"><ng-container *ngIf="!qp.hideFinishedQuestions || !questionMeta.finished"><ng-container [ngSwitch]="question.questiontype"><ng-container *ngSwitchCase="\'binary\'"><table class="slds-table question-render-question slds-table_bordered slds-table_col-bordered slds-border_left slds-border_right slds-no-row-hover" [ngStyle]="styleQuestionMerging()"><tbody><tr *ngIf="hasTitleTextOrImage"><td class="slds-p-bottom_medium" colspan="2" style="padding:0.75rem"><h3 *ngIf="question.questiontext && ( !question.image_id || questionset.showonlyimages !== \'1\' )">{{question.questiontext}}</h3><media-file-image *ngIf="question.image_id" [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="qp.imageWidthQuestion" [classOuter]="\'slds-m-vertical_small\'"></media-file-image></td></tr><tr><td width="50%" class="slds-text-align_right question-hover" style="padding: 0.75rem 0.75rem 0.75rem 0.25rem" (click)="qp.clickAnswerOption(qp.questionoptionsArray[question.id][0].id,$event)"><div class="slds-grid slds-grid_vertical-align-center slds-grid_align-end"><div style="cursor:default"><ng-container *ngIf="qp.questionoptionsArray[question.id][0].image_id"><media-file-image [media_id]="qp.questionoptionsArray[question.id][0].image_id" [variant]="\'mw\'" [frameWidth]="questionset.imageWidthOption" [classOuter]="\'slds-m-horizontal_x-small slds-m-vertical_small\'"></media-file-image></ng-container><ng-container *ngIf="!( qp.questionoptionsArray[question.id][1].image_id && questionset.showonlyimages === \'1\' )"><span *ngIf="qp.questionoptionsArray[question.id][0].text; else name0" style="white-space:pre-line">{{qp.questionoptionsArray[question.id][0].text}}</span><ng-template #name0>{{qp.questionoptionsArray[question.id][0].name}}</ng-template></ng-container></div><div class="slds-p-left_small"><input type="radio" [checked]="isChecked(qp.questionoptionsArray[question.id][0].id)" name="question-{{question.id}}" (click)="qp.clickAnswerOption(qp.questionoptionsArray[question.id][0].id,$event)" [disabled]="isDisabled()"></div></div></td><td width="50%" class="question-hover" style="padding: 0.75rem 0.25rem 0.75rem 0.75rem" (click)="qp.clickAnswerOption(qp.questionoptionsArray[question.id][1].id,$event)"><div class="slds-grid slds-grid_vertical-align-center"><div class="slds-p-right_small"><input type="radio" [checked]="isChecked(qp.questionoptionsArray[question.id][1].id)" (click)="qp.clickAnswerOption(qp.questionoptionsArray[question.id][1].id,$event)" [disabled]="isDisabled()"></div><div style="cursor:default"><ng-container *ngIf="qp.questionoptionsArray[question.id][1].image_id"><media-file-image [media_id]="qp.questionoptionsArray[question.id][1].image_id" [variant]="\'mw\'" [frameWidth]="questionset.imageWidthOption" [classOuter]="\'slds-m-horizontal_x-small slds-m-vertical_small\'"></media-file-image></ng-container><ng-container *ngIf="!( qp.questionoptionsArray[question.id][1].image_id && questionset.showonlyimages === \'1\' )"><span *ngIf="qp.questionoptionsArray[question.id][1].text; else name1" style="white-space:pre-line">{{qp.questionoptionsArray[question.id][1].text}}</span><ng-template #name1>{{qp.questionoptionsArray[question.id][1].name}}</ng-template></ng-container></div></div></td></tr></tbody></table></ng-container><ng-container *ngSwitchCase="\'multi\'"><div class="slds-box slds-p-around_none question-render-question" [ngStyle]="questionMeta.parameter.formatOptionsHorizontal ? styleQuestionMerging() : null"><div *ngIf="hasTitleTextOrImage" class="slds-p-around_small slds-border_bottom"><h3 *ngIf="question.questiontext && ( !question.image_id || questionset.showonlyimages !== \'1\' )">{{question.questiontext}}</h3><media-file-image *ngIf="question.image_id" [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="qp.imageWidthQuestion" [classOuter]="\'slds-m-vertical_small\'"></media-file-image></div><ng-container *ngIf="!questionMeta.parameter.formatOptionsHorizontal"><div *ngFor="let option of qp.questionoptionsArray[question.id];let j=index; let isLast=last" class="slds-grid slds-p-left_x-small slds-p-right_small question-hover" [ngClass]="{\'slds-border_bottom\':!isLast}" style="overflow:hidden" (click)="qp.clickAnswerOption(option.id,$event)"><div class="slds-p-left_xx-small slds-p-right_small slds-p-vertical_small"><input type="checkbox" [checked]="isChecked(option.id)" (click)="qp.clickAnswerOption(option.id,$event)" [disabled]="isDisabled()"></div><div class="slds-p-vertical_small"><media-file-image *ngIf="option.image_id" [media_id]="option.image_id" [variant]="\'mw\'" [frameWidth]="questionset.imageWidthOption" [classOuter]="\'slds-m-bottom_small\'"></media-file-image><label *ngIf="!( option.image_id && questionset.showonlyimages === \'1\' )">{{option.name}}</label></div></div></ng-container><ng-container *ngIf="questionMeta.parameter.formatOptionsHorizontal"><div *ngFor="let option of qp.questionoptionsArray[question.id];let j=index" class="slds-grid slds-grid_pull-padded-x-small" [ngClass]="{\'slds-border_left\':j>0}" [ngStyle]="{\'width\':100/qp.questionoptionsArray[question.id].length+\'%\'}" style="overflow:hidden" (click)="qp.clickAnswerOption(option.id,$event)"><div class="slds-m-bottom_xxx-small"><input type="checkbox" [checked]="isChecked(option.id)" (click)="qp.clickAnswerOption(option.id,$event)" [disabled]="isDisabled()"><media-file-image *ngIf="option.image_id" [media_id]="option.image_id" [variant]="\'mw\'" [classOuter]="\'slds-m-vertical_small\'" [align]="\'center\'"></media-file-image></div><label *ngIf="!( option.image_id && questionset.showonlyimages === \'1\' )">{{option.name}}</label></div></ng-container></div></ng-container><ng-container *ngSwitchCase="\'single\'"><div class="slds-box slds-p-around_none question-render-question" [ngStyle]="styleQuestionMerging()"><div *ngIf="hasTitleTextOrImage" class="slds-p-around_small slds-border_bottom"><h3 *ngIf="question.questiontext && ( !question.image_id || questionset.showonlyimages !== \'1\' )">{{question.questiontext}}</h3><media-file-image *ngIf="question.image_id" [media_id]="question.image_id" [variant]="\'mw\'" [frameWidth]="qp.imageWidthQuestion" [classOuter]="\'slds-m-vertical_small\'"></media-file-image></div><ng-container *ngIf="!questionMeta.parameter.formatOptionsHorizontal"><div *ngFor="let option of qp.questionoptionsArray[question.id];let j=index; let isLast=last" class="slds-grid slds-p-left_x-small slds-p-right_small question-hover" [ngClass]="{\'slds-border_bottom\':!isLast}" style="overflow:hidden" (click)="qp.clickAnswerOption(option.id,$event)"><div class="slds-p-left_xx-small slds-p-right_small slds-p-vertical_small"><input id="{{option.id}}" style="margin:auto" type="radio" [checked]="isChecked(option.id)" (click)="qp.clickAnswerOption(option.id,$event)" [disabled]="isDisabled()"></div><div class="slds-p-vertical_small"><media-file-image *ngIf="option.image_id" [media_id]="option.image_id" [variant]="\'mw\'" [frameWidth]="questionset.imageWidthOption" [classOuter]="\'slds-m-bottom_small\'"></media-file-image><label *ngIf="!( option.image_id && questionset.showonlyimages === \'1\' )">{{option.name}}</label></div></div></ng-container><div *ngIf="questionMeta.parameter.formatOptionsHorizontal" class="slds-grid"><div *ngFor="let option of qp.questionoptionsArray[question.id];let j=index; let isFirst=first" class="slds-size_1-of-1 slds-text-align_center slds-p-horizontal_small slds-p-vertical_x-small question-hover" [ngClass]="{\'slds-border_left\':!isFirst}" [ngStyle]="{\'width\':100/qp.questionoptionsArray[question.id].length+\'%\'}" style="overflow:hidden" (click)="qp.clickAnswerOption(option.id,$event)"><div class="slds-m-bottom_xxx-small"><input type="radio" [checked]="isChecked(option.id)" (click)="qp.clickAnswerOption(option.id,$event)" [disabled]="isDisabled()"></div><media-file-image *ngIf="option.image_id" [media_id]="option.image_id" [variant]="\'mw\'" [classOuter]="\'slds-m-vertical_small\'" [align]="\'center\'"></media-file-image><label *ngIf="!( option.image_id && questionset.showonlyimages === \'1\' )">{{option.name}}</label></div></div></div></ng-container></ng-container></ng-container></ng-container>',styles:["table.question-render-question { border-collapse: collapse; }","div.question-render-question { border-radius:0; margin-bottom: 1rem; }","div.question-render-question:last-child { margin-bottom: 0; }",".question-hover:hover { background-color: #f3f2f2; }"]}),__metadata("design:paramtypes",[questionnaireParticipationService])],e)}(QuestionRenderBasic);exports.QuestionRenderBinarySingleMulti=QuestionRenderBinarySingleMulti;var QuestionsManagerEditRatingGroup=function(n){function e(e,t,s){var i=n.call(this,e,t,s)||this;return i.language=e,i.model=t,i.view=s,i.questionset={},i.entries=[],i.options=[],i.isBuilt=!1,i.view.isEditable=!0,i.view.setEditMode(),i}return __extends(e,n),e.prototype.ngOnInit=function(){var t=this;n.prototype.ngOnInit.call(this),this.model.data$.subscribe(function(e){t.model.isLoading||t.isBuilt||t.buildEntries()})},e.prototype.buildEntries=function(){var e;this.isBuilt=!0;try{e=JSON.parse(this.questionset.data.questiontypeparameter)}catch(e){return}e.rating&&e.rating.entries&&(this.entries=e.rating.entries);for(var t=0,s=this.entries;t<s.length;t++){var i=s[t],n=!1,o=void 0;if(this.model.data.questionoptions&&this.model.data.questionoptions.beans)for(var a in this.model.data.questionoptions.beans)this.model.data.questionoptions.beans[a].questionset_type_parameter_id!==i.id||(n=!0,o=a);else this.model.data.questionoptions={beans:{}};var r=void 0;n||(r=this.model.generateGuid(),this.model.data.questionoptions.beans[r]={id:r,question_id:this.model.id,name:i.value,categories:"",points:"",questionset_type_parameter_id:i.id}),this.options.push(this.model.data.questionoptions.beans[n?o:r])}},e.prototype.change=function(){},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"questionset",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"categorypool",void 0),__decorate([core_1.Component({selector:"questions-manager-edit-rating-group",template:'<div class="slds-grid"><div class="slds-p-right--medium" style="width:100%;"><label for="{{compId}}-questiontext" class="slds-form-element__label"><system-label label="LBL_QUESTION_TEXT"></system-label></label> <input id="{{compId}}-questiontext" type="text" class="slds-input" [(ngModel)]="questiontext" (blur)="questiontextBlurred()"></div><div style="width:4rem"><label class="slds-form-element__label slds-m-horizontal--none"><system-label label="LBL_IMAGE"></system-label></label><br><field-container [field]="\'image_id\'" [fieldconfig]="{fieldtype:\'mediafileimage\'}" [fielddisplayclass]="\'\'" (change)="change()"></field-container></div></div><div class="slds-m-bottom--large slds-p-right--medium" style="width:100%"><label for="{{compId}}-name" class="slds-form-element__label"><system-label label="LBL_NAME"></system-label></label> <input id="{{compId}}-name" type="text" class="slds-input" [(ngModel)]="name" (blur)="nameBlurred()"></div><table *ngIf="entries.length" class="slds-table slds-table_bordered"><thead><tr><th scope="col"><div class="slds-text-align_right slds-p-right--x-small"><system-label label="LBL_VALUE"></system-label></div></th><th scope="col" width="100%"><div><system-label label="LBL_CATEGORIES"></system-label></div></th><th scope="col"><div class="slds-text-align_right"><system-label label="LBL_POINTS"></system-label></div></th></tr></thead><tbody><tr *ngFor="let entry of entries; let i = index;"><td><div class="slds-text-align_right slds-p-right--x-small">{{entry.value}}</div></td><td><div><questions-manager-edit-categories [option]="options[i]" [categorypool]="categorypool"></questions-manager-edit-categories></div></td><td><div class="slds-text-align_right"><input type="text" class="slds-input slds-text-align_right" [(ngModel)]="options[i].points" (change)="change()" style="width:unset" size="4"></div></td></tr></tbody></table>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.view])],e)}(QuestionsManagerEditBasic);exports.QuestionsManagerEditRatingGroup=QuestionsManagerEditRatingGroup;var fieldQuestionnaire=function(a){function fieldQuestionnaire(e,t,s,i,n){var o=a.call(this,e,t,s,i,n)||this;return o.model=e,o.view=t,o.language=s,o.metadata=i,o.router=n,o.questionnaireId="",o}return __extends(fieldQuestionnaire,a),fieldQuestionnaire.prototype.ngOnInit=function(){this.subscribeToModelDataChange(),this.subscribeToModelEditCancel()},fieldQuestionnaire.prototype.subscribeToModelDataChange=function(){var s=this;this.subscriptions.add(this.model.data$.subscribe(function(e){var t=s.model.getField("questionnaire_id");t?t!==s.questionnaireId&&(s.questionnaireId=t):s.questionnaireId&&(s.questionnaireId=t)}))},fieldQuestionnaire.prototype.subscribeToModelEditCancel=function(){var e=this;this.subscriptions.add(this.model.canceledit$.subscribe(function(){e.questionnaireParticipation.reset()}))},fieldQuestionnaire.prototype.ngOnDestroy=function(){this.subscriptions.unsubscribe()},fieldQuestionnaire.prototype.answersChanged=function(){var e={answers:_.clone(this.questionnaireParticipation.getData()),questionnaireId:this.model.getField("questionnaire_id")};this.value=e},__decorate([core_1.Component({selector:"field-questionnaire",template:'<questionnaire-render *ngIf="model.getField(\'questionnaire_id\')" [questionnaireId]="questionnaireId" [editMode]="view.getMode() === \'edit\' ? \'questionnaire\':\'off\'" [showQuestionnaireTitle]="false" [inModal]="false" [parentType]="model.module" [parentId]="model.id" (answersChanged$)="answersChanged()" (questionnaireParticipation$)="questionnaireParticipation=$event"></questionnaire-render><div *ngIf="!model.getField(\'questionnaire_id\')">No questionnaire selected yet.</div>'}),__metadata("design:paramtypes",[services_1.model,services_1.view,services_1.language,services_1.metadata,router_1.Router])],fieldQuestionnaire)}(objectfields_1.fieldGeneric);exports.fieldQuestionnaire=fieldQuestionnaire;var ModuleQuestionnaires=function(){function ModuleQuestionnaires(){}return __decorate([core_1.NgModule({imports:[common_1.CommonModule,forms_1.FormsModule,objectfields_1.ObjectFields,globalcomponents_1.GlobalComponents,objectcomponents_1.ObjectComponents,systemcomponents_1.SystemComponents,modulemediafiles_1.ModuleMediaFiles,directives_1.DirectivesModule,drag_drop_1.DragDropModule],declarations:[QuestionsManager,QuestionsManagerAddModal,QuestionsetTypeParameters,QuestionsetTypeParametersRating,QuestionsetTypeParametersNPS,QuestionsetTypeParametersText,QuestionsManagerEditBasic,QuestionsManagerEditBasicWithOptions,QuestionsManagerEditRating,QuestionsManagerEditNPS,QuestionsManagerEditBinary,QuestionsManagerEditBinaryOption,QuestionsManagerEditSingle,QuestionsManagerEditMulti,QuestionsManagerEditText,QuestionsManagerEditIst,QuestionsManagerEditOptionIst,QuestionsManagerEditOptionSingleMulti,QuestionsetPreviewButton,QuestionsetPreview,QuestionsetRender,QuestionsetRenderBasic,QuestionsetRenderRating,QuestionTypeISTTextPipe,QuestionTypeISTOptionsPipe,QuestionnairePreviewButton,QuestionnairePreview,QuestionnaireRender,QuestionnaireCategoryPool,QuestionsManagerEditCategories,QuestionnaireEditor,QuestionnaireEditorQuestionsetAdd,QuestionsetManager,QuestionnaireEvaluation,QuestionnaireEvaluationDefault,QuestionnaireEvaluationBar,QuestionnaireEvaluationSpiderweb,QuestionnaireInterpretationCategories,QuestionnaireInterpretationAssignment,QuestionnaireResults,QuestionnaireSingleEvaluationValues,QuestionnaireEntireEvaluation,QuestionnaireFillOutButton,QuestionnaireFillOutModal,QuestionRenderBasic,QuestionRenderText,QuestionRenderRating,QuestionRenderNPS,QuestionRenderIST,QuestionRenderBinarySingleMulti,QuestionsManagerEditRatingGroup,fieldQuestionnaire]})],ModuleQuestionnaires)}();exports.ModuleQuestionnaires=ModuleQuestionnaires;